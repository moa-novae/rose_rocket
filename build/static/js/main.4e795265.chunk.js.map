{"version":3,"sources":["components/Calendar/DayColumn/HourBlock/HourBlock.js","utils/bgBrightness.js","utils/hexToRgb.js","components/Modal/Modal.js","components/Form/TextInput/TextInput.js","components/Form/TextArea/TextArea.js","components/Dropdown/UseDropdown.js","components/Dropdown/DropdownSingle.js","utils/convertTime.js","components/Calendar/CalendarSidebar/CreateModal/CreateModal.js","components/Calendar/CalendarSidebar/CreateModal/useCreateModal.js","components/Calendar/DayColumn/Task/TaskModal/TaskModal.js","components/Calendar/DayColumn/Task/Task.js","components/Calendar/DayColumn/DayColumn.js","utils/findOverlappingTasks.js","components/Calendar/TimeColumn/TimeColumn.js","components/Calendar/CalendarMainHeader/CalendarMainHeader.js","components/Dropdown/DropdownMultiple.js","components/Calendar/CalendarSidebar/GenerateCsv/useGenerateCsv.js","components/Calendar/CalendarSidebar/GenerateCsv/GenerateCsv.js","components/Calendar/CalendarSidebar/CalendarSidebar.js","utils/uniqueId.js","utils/sampleData.js","components/Calendar/useCalendar.js","components/Calendar/Calendar.js","components/app/App.js","serviceWorker.js","index.js"],"names":["HourBlock","className","bgBrightness","hex","result","exec","r","parseInt","g","b","hexToRgb","perceivedBrightness","console","log","Modal","showModal","handleOnClose","setShowModal","children","useEffect","TextInput","props","name","value","placeholder","handleOnChange","type","onChange","maxLength","useDropdown","useState","listOpen","setListOpen","toggleList","prev","Dropdown","title","list","select","selected","ListItem","item","key","id","onClick","icon","faCheck","listItems","map","titleText","filter","faChevronUp","faChevronDown","role","timeRatio","hour","day","week","year","convertTime","time","from","to","CreateModal","driversList","addTask","addAndDeleteTask","deleteTask","initialState","taskType","driver","startDay","startHour","endHour","startLocation","endLocation","description","form","setForm","errors","setError","showConflictOptions","setShowConflictOptions","conflictedTasks","setConflictedTasks","transformFormToTaskShape","startTime","endTime","location","start","end","closeConflictOptions","e","target","newValue","oldState","test","validateOnChange","handleDriverChange","handleTaskTypeChange","handleSubmit","newErrors","newError","validateSubmit","Object","keys","length","handlePlaceAroundConflict","place","localConflictedTasks","task","taskDuration","sort","a","handleOverrideConflict","useCreateModal","faTruckMoving","faClock","faMapMarkerAlt","TaskModal","taskInfo","Math","floor","finish","mode","setMode","faEdit","faTrashAlt","Task","overlap","lane","driverIndex","indexOf","taskBgColour","colour","taskFontColour","style","height","duration","top","width","backgroundColor","color","dailyTasks","driversSelected","hourBlocks","Array","fill","visibleTasks","some","overlappingTaskIds","tasks","overlappingTasks","currentTask","push","findOverlappingTasks","includes","TimeColumn","hours","_","i","CalendarHeader","changeWeekBy","weekInput","handleWeekJump","faChevronLeft","faChevronRight","faArrowRight","toggle","selectedItemsCount","reduce","accu","useGenerateCsf","yearlyTasks","csvInterval","setCsvInterval","driverSelected","setDriverSelected","data","setData","filename","possibleInterval","handleDownload","intervalDuration","driverTasks","values","initialAccumulator","pickup","dropoff","other","output","intervalStartDay","tally","timeFrame","transformToCsvShape","taskTally","accumulator","taskDay","taskInterval","newAccumulator","entries","sumEachInterval","summarizeDriverActivities","headers","label","useGenerateCsv","CalendarSidebar","toggleDriverSelected","showCreateModal","setShowCreateModal","GenerateCsv","random","toString","substr","initialDrivers","initialYearTasks","Map","useCalendar","calendarTime","setCalendarTime","setWeekInput","setDrivers","setYearlyTasks","sortTasks","taskMap","checkTimeConflict","newTask","existingTask","n","newWeek","weeklyTasks","newTasksMap","uniqueId","set","taskToBeAdded","taskToBeDeleted","forEach","taskId","delete","trim","re","driverId","toggledDriverIndex","dayColumns","DayColumn","App","Calendar","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4e795265.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./hourBlock.scss\";\n\nexport default function HourBlock() {\n  return <div className=\"hour-block\"></div>;\n}\n","// inspired by https://css-tricks.com/switch-font-color-for-different-backgrounds-with-css/\nimport { hexToRgb } from \"./hexToRgb\";\nexport const bgBrightness = function (hex) {\n  const { r, g, b } = hexToRgb(hex);\n  //the threshold at which colors are considered \"light\"\n  const threshold = 0.5;\n  const perceivedBrightness = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 255;\n  console.log(r, g, b);\n  return perceivedBrightness < threshold ? \"dark\" : \"bright\";\n};\n","// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\nexport const hexToRgb = function (hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null;\n};\n","import React, { useEffect } from \"react\";\nimport \"./modal.scss\";\nexport default function Modal({\n  showModal,\n  setShowModal,\n  handleOnClose,\n  children,\n}) {\n  /* not the cleanest way to run function when modal closes\n  since it is also run on load as modal is closed by default\n  but things work for now\n  it is mainly used to reset modal related state on close*/\n  useEffect(() => {\n    if (!showModal) {\n      if (handleOnClose) {\n        handleOnClose();\n      }\n    }\n  }, [showModal, handleOnClose]);\n  return (\n    // only show modal if showModal === true\n    <>\n      {showModal && (\n        <>\n          <div\n            className=\"backdrop\"\n            onClick={() => {\n              setShowModal(false);\n            }}\n          ></div>\n          <div className=\"modal\">{children}</div>\n        </>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./textInput.scss\";\nexport default function TextInput(props) {\n  const { name, value, placeholder, handleOnChange } = props;\n  return (\n    <div className=\"text-input\">\n      <input\n        name={name}\n        type=\"text\"\n        value={value}\n        placeholder={placeholder}\n        onChange={handleOnChange}\n        maxLength={50}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./textArea.scss\";\nexport default function TextInput(props) {\n  const { name, value, placeholder, handleOnChange } = props;\n  return (\n    <div className=\"text-area\">\n      <textarea\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        onChange={handleOnChange}\n        maxLength={400}\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nexport default function useDropdown() {\n  const [listOpen, setListOpen] = useState(false);\n  const toggleList = () => {\n    setListOpen((prev) => !prev);\n  };\n  return { listOpen, toggleList };\n}\n","import React from \"react\";\nimport useDropdown from \"./UseDropdown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronUp,\n  faChevronDown,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Dropdown.scss\";\nexport default function Dropdown({\n  title = \"none\",\n  list = [],\n  select,\n  selected,\n}) {\n  const { listOpen, toggleList } = useDropdown();\n  const ListItem = ({ item }) => (\n    <button\n      type=\"button\"\n      className=\"dd-list-item\"\n      key={item.id}\n      onClick={() => {\n        select({ id: item.id, name: item.name });\n        toggleList();\n      }}\n    >\n      {`${item.name} `}{\" \"}\n      {selected.id === item.id && <FontAwesomeIcon icon={faCheck} />}\n    </button>\n  );\n  const listItems = list.map((item) => <ListItem item={item} />);\n\n  // decide what text to show in dd-header\n  let titleText = title;\n  if (selected.id) {\n    // if something is selected, use the selected name as title text of dd\n    titleText = list.filter((item) => item.id === selected.id)[0].name;\n  }\n  return (\n    <>\n      {/* when list open, show transparent backdrop under dd that closes dd when clicked on  */}\n      {listOpen && <div className=\"dd-backdrop\" onClick={toggleList}></div>}\n      <div className=\"dd-wrapper\">\n        <button\n          type=\"button\"\n          className=\"dd-header\"\n          onClick={() => toggleList()}\n        >\n          <div className=\"dd-header-title\">{titleText}</div>\n          {listOpen ? (\n            <FontAwesomeIcon icon={faChevronUp} />\n          ) : (\n            <FontAwesomeIcon icon={faChevronDown} />\n          )}\n        </button>\n        {/* show list of items when list open */}\n        {listOpen && (\n          <div role=\"list\" className=\"dd-list\">\n            <div className=\"dd-scroll-list\">{listItems}</div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","export const timeRatio = {\n  hour: 1,\n  day: 24,\n  week: 168,\n  year: 8736,\n};\n\nexport const convertTime = function (time, from, to) {\n  return time * (timeRatio[from] / timeRatio[to]);\n};\n","import React from \"react\";\nimport Modal from \"../../../Modal/Modal\";\nimport TextInput from \"../../../Form/TextInput/TextInput\";\nimport TextArea from \"../../../Form/TextArea/TextArea\";\nimport DropdownSingle from \"../../../Dropdown/DropdownSingle\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMapMarkerAlt,\n  faClock,\n  faTruckMoving,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport useCreateModal from \"./useCreateModal\";\nimport \"./createModal.scss\";\nexport default function CreateModal({\n  driversList,\n  showModal,\n  setShowModal,\n  addTask,\n  deleteTask,\n  addAndDeleteTask,\n  initialState,\n  handleOnClose,\n}) {\n  const taskTypes = [\n    { id: \"pickup\", name: \"Pick up\" },\n    { id: \"dropoff\", name: \"Drop off\" },\n    { id: \"other\", name: \"Other\" },\n  ];\n  // the existence of initial state means it is edit mode\n  if (!initialState) {\n    initialState = {\n      name: \"\",\n      taskType: {},\n      driver: {},\n      startDay: \"\",\n      startHour: \"\",\n      endHour: \"\",\n      startLocation: \"\",\n      endLocation: \"\",\n      description: \"\",\n    };\n  }\n  const {\n    showConflictOptions,\n    form,\n    errors,\n    closeConflictOptions,\n    handleSubmit,\n    handleOnChange,\n    handleDriverChange,\n    handleTaskTypeChange,\n    handlePlaceAroundConflict,\n    handleOverrideConflict,\n  } = useCreateModal(\n    initialState,\n    addTask,\n    deleteTask,\n    addAndDeleteTask,\n    setShowModal\n  );\n  return (\n    <Modal\n      showModal={showModal}\n      setShowModal={setShowModal}\n      handleOnClose={handleOnClose}\n    >\n      <div className=\"create-modal-content-wrapper\">\n        <div className=\"create-modal-first\">\n          <div className=\"task-name-input-wrapper\">\n            {/* choose task name */}\n            <TextInput\n              placeholder=\"Task Name\"\n              name=\"name\"\n              value={form.name}\n              handleOnChange={handleOnChange}\n            />\n            <div className=\"form-modal-error\">{errors.name}</div>\n          </div>\n          <div className=\"task-type-dd-wrapper\">\n            {/* choose task type */}\n            <DropdownSingle\n              list={taskTypes}\n              title=\"Task Type\"\n              selected={form.taskType}\n              select={handleTaskTypeChange}\n            />\n            <div className=\"form-modal-error\">{errors.taskType}</div>\n          </div>\n        </div>\n        <div className=\"create-modal-icon twos\">\n          <FontAwesomeIcon icon={faTruckMoving} />\n\n          <DropdownSingle\n            list={driversList}\n            title=\"Driver\"\n            selected={form.driver}\n            select={handleDriverChange}\n          />\n        </div>\n        <div className=\"form-modal-error outer\">{errors.driver}</div>\n\n        <div className=\"create-modal-icon fours\">\n          <FontAwesomeIcon icon={faClock} />\n\n          <TextInput\n            placeholder=\"Day\"\n            name=\"startDay\"\n            value={form.startDay}\n            handleOnChange={handleOnChange}\n          />\n          <TextInput\n            placeholder=\"Hour\"\n            name=\"startHour\"\n            value={form.startHour}\n            handleOnChange={handleOnChange}\n          />\n          <span>-</span>\n          <TextInput\n            placeholder=\"Hour\"\n            name=\"endHour\"\n            value={form.endHour}\n            handleOnChange={handleOnChange}\n          />\n        </div>\n        <div className=\"form-modal-error outer\"> {errors.time}</div>\n        <div className=\"create-modal-icon twos\">\n          <FontAwesomeIcon icon={faMapMarkerAlt} />\n\n          <TextInput\n            placeholder=\"Start\"\n            name=\"startLocation\"\n            value={form.startLocation}\n            handleOnChange={handleOnChange}\n          />\n          <TextInput\n            placeholder=\"End\"\n            name=\"endLocation\"\n            value={form.endLocation}\n            handleOnChange={handleOnChange}\n          />\n        </div>\n        <div className=\"create-modal-first description\">\n          <TextArea\n            placeholder=\"Task Description\"\n            name=\"description\"\n            value={form.description}\n            handleOnChange={handleOnChange}\n          />\n        </div>\n        {!showConflictOptions && (\n          <div className=\"save-btn-wrapper\">\n            <button className=\"simple-btn save-btn\" onClick={handleSubmit}>\n              Save\n            </button>\n          </div>\n        )}\n        {showConflictOptions && (\n          <div className=\"conflicted-options-wrapper\">\n            <button\n              className=\"simple-btn override-btn\"\n              onClick={handleOverrideConflict}\n            >\n              Override Conflict\n            </button>\n            <button\n              className=\"simple-btn gentle-btn\"\n              onClick={() => handlePlaceAroundConflict(\"before\")}\n            >\n              Place Before Conflict\n            </button>\n            <button\n              className=\"simple-btn gentle-btn\"\n              onClick={() => handlePlaceAroundConflict(\"after\")}\n            >\n              Place After Conflict\n            </button>\n            <button\n              className=\"simple-btn cancel-btn\"\n              onClick={closeConflictOptions}\n            >\n              Cancel\n            </button>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n}\n","import { useState } from \"react\";\nimport { convertTime } from \"../../../../utils/convertTime\";\nexport default function useCreateModal(\n  initialState,\n  addTask,\n  deleteTask,\n  addAndDeleteTask,\n  setShowModal\n) {\n  const [form, setForm] = useState(initialState);\n  const [errors, setError] = useState({});\n  const [showConflictOptions, setShowConflictOptions] = useState(false);\n  const [conflictedTasks, setConflictedTasks] = useState([]);\n  function validateSubmit(form) {\n    let newError = {};\n    if (!form.name) {\n      newError.name = \"Name cannot be empty\";\n    }\n    if (!form.taskType.id) {\n      newError.taskType = \"A task type must be selected\";\n    }\n    if (!form.driver.id) {\n      newError.driver = \"A driver must be selected\";\n    }\n    if (\n      !form.startDay ||\n      !form.startHour ||\n      !form.endHour ||\n      form.endHour < form.startHour\n    ) {\n      newError.time = \"Please enter a valid time\";\n    }\n    return newError;\n  }\n\n  function validateOnChange(name, newValue, oldState) {\n    const validDay = /^([0-9]|[1-8][0-9]|9[0-9]|[12][0-9]{2}|3[0-5][0-9]|36[0-3])$/;\n    const validHour = /^([0-9]|1[0-9]|2[0-3])$/;\n    switch (name) {\n      case \"startDay\":\n        if (newValue === \"\") {\n          return newValue;\n        }\n        // check if valid day 0 - 363\n        if (validDay.test(newValue)) {\n          return newValue;\n        }\n        return oldState[name];\n      case \"startHour\":\n      case \"endHour\":\n        if (newValue === \"\") {\n          return newValue;\n        }\n        // check if valid hour 0 - 23\n        if (validHour.test(newValue)) {\n          return newValue;\n        }\n        return oldState[name];\n\n      default:\n        return newValue;\n    }\n  }\n  function handleOnChange(e) {\n    const { name, value } = e.target;\n    setForm((prev) => ({\n      ...prev,\n      [name]: validateOnChange(name, value, prev),\n    }));\n  }\n  function handleDriverChange(driver) {\n    setForm((prev) => ({ ...prev, driver }));\n  }\n  function handleTaskTypeChange(taskType) {\n    setForm((prev) => ({ ...prev, taskType }));\n  }\n\n  function transformFormToTaskShape(form) {\n    const {\n      name,\n      description,\n      taskType,\n      driver,\n      startLocation,\n      endLocation,\n      startDay,\n      startHour,\n      endHour,\n      id,\n    } = form;\n    const day = convertTime(startDay, \"day\", \"hour\");\n    const startTime = day + parseInt(startHour);\n    const endTime = day + parseInt(endHour);\n    const task = {\n      id,\n      name: name,\n      description,\n      type: taskType.id,\n      driver,\n      location: { start: startLocation, end: endLocation },\n      time: { start: parseInt(startTime), end: parseInt(endTime) },\n    };\n    return task;\n  }\n\n  function handleSubmit() {\n    const newErrors = validateSubmit(form);\n    if (Object.keys(newErrors).length) {\n      setError(newErrors);\n    } else {\n      // need to transform form state to the shape of task state in useCalendar\n      // addTask return array of conflicted tasks if any\n      const conflictedTasks = addTask(transformFormToTaskShape(form));\n      if (conflictedTasks?.length) {\n        setConflictedTasks(conflictedTasks);\n        setShowConflictOptions(true);\n      } else {\n        // close modal if no errors in form and no conflict\n        setShowModal(false);\n        setForm(initialState);\n      }\n    }\n  }\n\n  function handlePlaceAroundConflict(place) {\n    let localConflictedTasks = [...conflictedTasks];\n    let task = transformFormToTaskShape(form);\n    const taskDuration = task.time.end - task.time.start;\n    // every loop, a conflict free slot is proposed based on immediate conflicts\n    // if there is still conflict at the new slot, repeat\n    while (\n      localConflictedTasks.length ||\n      task.time.start % 24 > task.time.end % 24\n    ) {\n      if (place === \"before\") {\n        // element at conflictedTasks[0] is the earliest conflict\n        task.time.end = localConflictedTasks[0].time.start;\n        task.time.start = task.time.end - taskDuration;\n      } else if (place === \"after\") {\n        // sort task with the latest end time to index 0\n        task.time.start = localConflictedTasks.sort(\n          (a, b) => b.time.end - a.time.end\n        )[0].time.end;\n        task.time.end = task.time.start + taskDuration;\n      }\n\n      // first parameter is task to be added, rest are to be deleted\n      // the task itself need to be deleted in case of edits to stop false conflicts\n      // keep checking for free space until no conflict and task not over night\n      localConflictedTasks = addAndDeleteTask(task, task.id);\n    }\n    setShowModal(false);\n    setShowConflictOptions(false);\n    setForm(initialState);\n  }\n\n  function handleOverrideConflict() {\n    const task = transformFormToTaskShape(form);\n    addAndDeleteTask(task, ...conflictedTasks.map((task) => task.id));\n    setShowModal(false);\n    setShowConflictOptions(false);\n    setForm(initialState);\n  }\n  function closeConflictOptions() {\n    setShowConflictOptions(false);\n  }\n  return {\n    form,\n    showConflictOptions,\n    closeConflictOptions,\n    errors,\n    handleOnChange,\n    handleDriverChange,\n    handleTaskTypeChange,\n    handleSubmit,\n    handlePlaceAroundConflict,\n    handleOverrideConflict,\n  };\n}\n","import React, { useState } from \"react\";\nimport Modal from \"../../../../Modal/Modal\";\nimport CreateModal from \"../../../CalendarSidebar/CreateModal/CreateModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMapMarkerAlt,\n  faClock,\n  faTruckMoving,\n  faEdit,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { convertTime } from \"../../../../../utils/convertTime\";\nimport \"./taskModal.scss\";\nexport default function TaskModal({\n  taskInfo,\n  showModal,\n  setShowModal,\n  driversList,\n  addTask,\n  deleteTask,\n  addAndDeleteTask,\n}) {\n  // transform time into human readable day and hour\n  const day = taskInfo.time.start % (24 * 7);\n  const week = Math.floor(convertTime(taskInfo.time.start, \"hour\", \"week\"));\n  const startHour = taskInfo.time.start % 24;\n  const endHour = taskInfo.time.end % 24;\n  // massage taskInfo prop into the correct form state shape and pass as initial state\n  const initialState = {\n    id: taskInfo.id,\n    name: taskInfo.name,\n    taskType: { id: taskInfo.type },\n    driver: { id: taskInfo.driver.id },\n    startDay: Math.floor(convertTime(taskInfo.time.start, \"hour\", \"day\")),\n    startHour: taskInfo.time.start % 24,\n    endHour: taskInfo.time.end % 24,\n    startLocation: taskInfo.location.start,\n    endLocation: taskInfo.location.finish,\n    description: taskInfo.description,\n  };\n  const [mode, setMode] = useState(\"view\");\n  return (\n    <>\n      {mode === \"view\" && (\n        <Modal\n          showModal={showModal}\n          setShowModal={setShowModal}\n          handleOnClose={() => setMode(\"view\")}\n        >\n          <div className=\"task-wrapper\">\n            <div className=\"action-wrapper\">\n              <FontAwesomeIcon\n                icon={faEdit}\n                onClick={() => {\n                  setMode(\"edit\");\n                }}\n              />\n              <FontAwesomeIcon\n                icon={faTrashAlt}\n                onClick={() => deleteTask(taskInfo.id)}\n              />\n            </div>\n            <div className=\"task-name\">{taskInfo.name}</div>\n            <div className=\"task-line no-icon\">\n              <div>{taskInfo.type}</div>\n            </div>\n            <div className=\"task-line\">\n              <FontAwesomeIcon icon={faTruckMoving} />\n\n              <div>{taskInfo.driver.name}</div>\n            </div>\n\n            <div className=\"task-line\">\n              <FontAwesomeIcon icon={faClock} />\n\n              <div>\n                {`From week ${week} day ${day} hour ${startHour} to ${endHour}`}\n              </div>\n            </div>\n\n            <div className=\"task-line\">\n              <FontAwesomeIcon icon={faMapMarkerAlt} />\n\n              <div>\n                {`From ${taskInfo.location.start} to ${taskInfo.location.finish}`}\n              </div>\n            </div>\n            <div className=\"task-line no-icon\">\n              <div>{taskInfo.description}</div>\n            </div>\n          </div>\n        </Modal>\n      )}\n      {mode === \"edit\" && (\n        <CreateModal\n          initialState={initialState}\n          showModal={showModal}\n          setShowModal={setShowModal}\n          addTask={addTask}\n          deleteTask={deleteTask}\n          addAndDeleteTask={addAndDeleteTask}\n          driversList={driversList}\n          handleOnClose={() => setMode(\"view\")}\n        />\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { bgBrightness } from \"../../../../utils/bgBrightness\";\nimport TaskModal from \"./TaskModal/TaskModal\";\nimport \"./task.scss\";\n\nexport default function Task(props) {\n  const {\n    addTask,\n    taskInfo,\n    driversList,\n    deleteTask,\n    addAndDeleteTask,\n    overlap,\n  } = props;\n  const [showModal, setShowModal] = useState(false);\n  // lane is used for horizontal offsets when more than one task share an hour block\n  let lane = 0;\n  const driverIndex = driversList\n    .map((driver) => driver.id)\n    .indexOf(taskInfo.driver.id);\n  if (overlap) {\n    lane = driverIndex + 1;\n  }\n  // each driver has own bg colour for task\n  const taskBgColour = driversList[driverIndex].colour;\n  // choose font colour dynamically depending on bg\n  const taskFontColour =\n    bgBrightness(taskBgColour) === \"bright\" ? \"#3c4043\" : \"#fafafa\";\n  console.log(taskFontColour);\n  return (\n    <>\n      {taskInfo && (\n        <>\n          {/* show modal of task detail if user click on task */}\n          <TaskModal\n            showModal={showModal}\n            setShowModal={setShowModal}\n            taskInfo={taskInfo}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            addAndDeleteTask={addAndDeleteTask}\n            driversList={driversList}\n          />\n\n          <div\n            className=\"task\"\n            // -0.1 and +0.05 allows sliver of space between connective tasks\n            style={{\n              height: `${3 * taskInfo.duration - 0.1}em`,\n              top: `${3 * taskInfo.hour + 0.05}em`,\n              width: `${100 - lane * 10}%`,\n              backgroundColor: taskBgColour,\n              color: taskFontColour,\n            }}\n            onClick={() => {\n              setShowModal(true);\n            }}\n          >\n            <div className=\"task-name\">\n              {taskInfo.name}\n              <div className=\"task-description\">{taskInfo.description}</div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./dayColumn.scss\";\nimport HourBlock from \"./HourBlock/HourBlock\";\nimport Task from \"./Task/Task\";\nimport findOverlappingTasks from \"../../../utils/findOverlappingTasks\";\nexport default function ({\n  day,\n  dailyTasks,\n  driversSelected,\n  driversList,\n  addTask,\n  deleteTask,\n  addAndDeleteTask,\n}) {\n  // add 24 HourBlocks to each DayColumn\n  // each HourBlock is assigned an hour\n  const hourBlocks = Array(24).fill(<HourBlock />);\n\n  // the filter allows tasks that have drivers selected to show up\n  const visibleTasks = dailyTasks.filter((task) =>\n    driversSelected.some((driver) => driver.selected && driver.id === task.driver.id)\n  );\n  // not sure if this is more efficient for finding overlapping tasks or dom ref is better\n  // find overlapping tasks and style them differently\n  const overlappingTaskIds = findOverlappingTasks(visibleTasks);\n\n  const tasks = visibleTasks.map((task) => (\n    <Task\n      key={task.id}\n      taskInfo={task}\n      driversList={driversList}\n      addTask={addTask}\n      deleteTask={deleteTask}\n      addAndDeleteTask={addAndDeleteTask}\n      overlap={overlappingTaskIds.includes(task.id)}\n    />\n  ));\n\n  return (\n    <div className=\"day-column\">\n      <div className=\"day-header\">{day}</div>\n      <div className=\"notch\"></div>\n      <div className=\"day-block\">\n        <div className=\"hour-blocks\">{hourBlocks}</div>\n        <div className=\"task-block\">{tasks}</div>\n      </div>\n    </div>\n  );\n}\n","export default function findOverlappingTasks(tasks) {\n  const overlappingTasks = [];\n  for (const currentTask of tasks) {\n    function overlap(task) {\n      // check if currentTask start time between task start/end\n      if (currentTask.id === task.id) {\n        return false\n      }\n      else if (\n        currentTask.time.start >= task.time.start &&\n        currentTask.time.start < task.time.end\n      ) {\n        return true;\n      }\n      // check if currentTask end time between task start/end\n      else if (\n        currentTask.time.end > task.time.start &&\n        currentTask.time.end <= task.time.end\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    if (tasks.some(overlap)) {\n      overlappingTasks.push(currentTask.id);\n    }\n  }\n\n  return overlappingTasks;\n}\n","import React from \"react\";\nimport \"./timeColumn.scss\";\nexport default function TimeColumn() {\n  // hours = [1, 2, ... 24]\n  const hours = Array.from(Array(24), (_, i) => i);\n  return (\n    <div className=\"time-column\">\n      <div className=\"time-column-header\"></div>\n      <div className=\"time-slots\">\n        {hours.map((hour) => (\n          <div className=\"time-slot\">\n            <div className=\"time-number\">{hour}</div>\n            <div className=\"time-notch\"></div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./calendarMainHeader.scss\";\n\nexport default function CalendarHeader(props) {\n  const {\n    week,\n    changeWeekBy,\n    weekInput,\n    handleOnChange,\n    handleWeekJump,\n  } = props;\n  return (\n    <div className=\"calendar-header\">\n      <div className=\"calendar-header-left\">\n        <div className=\"calendar-week\">{`Week ${week}`}</div>\n        <div className=\"calendar-week-btns\">\n          <div className=\"calendar-week-btn\">\n            <FontAwesomeIcon\n              icon={faChevronLeft}\n              onClick={() => changeWeekBy(-1)}\n            />\n          </div>\n          <div className=\"calendar-week-btn\">\n            <FontAwesomeIcon\n              icon={faChevronRight}\n              onClick={() => changeWeekBy(1)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"calendar-header-right\">\n        Change week to\n        <input\n          // not using type='number'\n          // since easier to use regex to limit value to 0<=x<-51\n          value={weekInput}\n          onChange={handleOnChange}\n        />\n        <FontAwesomeIcon icon={faArrowRight} onClick={handleWeekJump} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport useDropdown from \"./UseDropdown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronUp,\n  faChevronDown,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Dropdown.scss\";\nexport default function Dropdown({ title = \"none\", list = [], toggle }) {\n  const { listOpen, toggleList } = useDropdown();\n  const ListItem = ({ item }) => (\n    <button\n      type=\"button\"\n      className=\"dd-list-item\"\n      key={item.id}\n      onClick={() => {\n        toggle(item.id);\n      }}\n    >\n      {`${item.name} `} {item.selected && <FontAwesomeIcon icon={faCheck} />}\n    </button>\n  );\n  const listItems = list.map((item) => <ListItem item={item} />);\n  const selectedItemsCount = list.reduce(\n    (accu, item) => (item.selected ? accu + 1 : accu),\n    0\n  );\n  // decide what text to show in dd-header\n  let titleText = title;\n  if (selectedItemsCount === 1) {\n    titleText = list.filter((item) => item.selected)[0].name;\n  } else if (selectedItemsCount > 1) {\n    titleText = \"Multiple Selected\";\n  }\n  return (\n    <>\n      {/* when list open, show transparent backdrop under dd that closes dd when clicked on  */}\n      {listOpen && <div className=\"dd-backdrop\" onClick={toggleList}></div>}\n      {/* z-index ensures list is above sibling elements when open */}\n      <div className=\"dd-wrapper\">\n        <button\n          type=\"button\"\n          className=\"dd-header\"\n          onClick={() => toggleList()}\n        >\n          <div className=\"dd-header-title\">{titleText}</div>\n          {listOpen ? (\n            <FontAwesomeIcon icon={faChevronUp} />\n          ) : (\n            <FontAwesomeIcon icon={faChevronDown} />\n          )}\n        </button>\n\n        {listOpen && (\n          <div role=\"list\" className=\"dd-list\">\n            <div className=\"dd-scroll-list\">{listItems}</div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","import { useState } from \"react\";\nexport default function useGenerateCsf(yearlyTasks, driversList) {\n  const [csvInterval, setCsvInterval] = useState({ id: 2, name: \"2 days\" });\n  const [driverSelected, setDriverSelected] = useState(driversList[0]);\n  const [data, setData] = useState([]);\n\n  const possibleInterval = [\n    { id: 2, name: \"2 days\" },\n    { id: 4, name: \"4 days\" },\n    { id: 7, name: \"7 days\" },\n    { id: 14, name: \"14 days\" },\n    { id: 28, name: \"28 days\" },\n  ];\n  const headers = [\n    { label: \"Time Frame\", key: \"timeFrame\" },\n    { label: \"Pickup\", key: \"pickup\" },\n    { label: \"Drop-off\", key: \"dropoff\" },\n    { label: \"Other\", key: \"other\" },\n  ];\n  function summarizeDriverActivities() {\n    const intervalDuration = csvInterval.id;\n    // find all task of the driver selected\n    // convert map to array first\n    const driverTasks = Array.from(yearlyTasks.values()).filter(\n      (task) => task.driver.id === driverSelected.id\n    );\n    // generate the accumulator object used to tally tasks\n    let initialAccumulator = {};\n    for (let i = 0; i < 364; i++) {\n      // if beginning of interval\n      if (i % intervalDuration === 0) {\n        initialAccumulator[i] = { pickup: 0, dropoff: 0, other: 0 };\n      }\n    }\n\n    function sumEachInterval(initialAccumulator, tasks) {\n      const taskTally = tasks.reduce((accumulator, task) => {\n        const taskDay = Math.floor(task.time.start / 24);\n        /* ex: for day 5 at 2 day interval, the interval \n        which it belongs to is 4 - 5. so taskInterval = 4*/\n        const taskInterval = taskDay - (taskDay % intervalDuration);\n        const newAccumulator = { ...accumulator };\n        // increment the appropriate task type\n        newAccumulator[taskInterval][task.type] += 1;\n        return newAccumulator;\n      }, initialAccumulator);\n      return Object.entries(taskTally);\n    }\n    // transform data to shape accepted by react-csv\n    function transformToCsvShape(data) {\n      const output = [];\n      for (const [intervalStartDay, tally] of data) {\n        output.push({\n          timeFrame: `Day ${intervalStartDay} - Day ${\n            parseInt(intervalStartDay) + intervalDuration\n          }`,\n          ...tally,\n        });\n      }\n      return output;\n    }\n    return transformToCsvShape(\n      sumEachInterval(initialAccumulator, driverTasks)\n    );\n  }\n\n  function handleDownload() {\n    setData(summarizeDriverActivities());\n  }\n  const filename = `${driverSelected.id}-${driverSelected.name}-${csvInterval.id}-days-interval-summary`;\n\n  return {\n    csvInterval,\n    setCsvInterval,\n    possibleInterval,\n    driverSelected,\n    setDriverSelected,\n    handleDownload,\n    data,\n    headers,\n    filename,\n  };\n}\n","import React from \"react\";\nimport DropdownSingle from \"../../../Dropdown/DropdownSingle\";\nimport useGenerateCsv from \"./useGenerateCsv\";\nimport { CSVLink } from \"react-csv\";\nimport \"./generateCsv.scss\";\nexport default function ({ yearlyTasks, driversList }) {\n  const {\n    csvInterval,\n    setCsvInterval,\n    possibleInterval,\n    driverSelected,\n    setDriverSelected,\n    handleDownload,\n    data,\n    headers,\n    filename,\n  } = useGenerateCsv(yearlyTasks, driversList);\n  return (\n    <div className=\"csv-download\">\n      <h3>CSV summary export</h3>\n      <div className=\"csv-options\">\n        <div className=\"day-option\">\n          <div className=\"csv-option-label\">Select Interval</div>\n          <DropdownSingle\n            list={possibleInterval}\n            select={setCsvInterval}\n            selected={csvInterval}\n          />\n        </div>\n        <div className=\"driver-option\">\n          <div className=\"csv-option-label\">Select Driver</div>\n          <DropdownSingle\n            list={driversList}\n            select={setDriverSelected}\n            selected={driverSelected}\n          />\n        </div>\n      </div>\n\n      <CSVLink\n        data={data}\n        onClick={handleDownload}\n        headers={headers}\n        filename={filename}\n        className=\"simple-btn csv-download-btn\"\n      >\n        Download CSV\n      </CSVLink>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./calendarSidebar.scss\";\nimport DropdownMultiple from \"../../Dropdown/DropdownMultiple\";\n// import TextInput from \"../../Form/TextInput/TextInput\"\nimport CreateModal from \"./CreateModal/CreateModal\";\nimport GenerateCsv from \"./GenerateCsv/GenerateCsv\";\nexport default function CalendarSidebar(props) {\n  const {\n    addTask,\n    driversSelected,\n    driversList,\n    toggleDriverSelected,\n    addAndDeleteTask,\n    yearlyTasks,\n  } = props;\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  return (\n    <div className=\"calendar-sidebar-content\">\n      <div className=\"new-task-btn-wrapper\">\n        <button\n          className=\"new-task-btn simple-btn\"\n          onClick={() => setShowCreateModal(true)}\n        >\n          Create Task\n        </button>\n      </div>\n      <div className=\"driver-selection-wrapper side-bar-wrapper\">\n        <h3>{\"Select displayed driver(s)\"} </h3>\n        <DropdownMultiple\n          list={driversSelected}\n          toggle={toggleDriverSelected}\n          title=\"Select Drivers\"\n        />\n      </div>\n      <div className=\"csv-generation-wrapper side-bar-wrapper\">\n        <GenerateCsv yearlyTasks={yearlyTasks} driversList={driversList} />\n      </div>\n      <CreateModal\n        showModal={showCreateModal}\n        setShowModal={setShowCreateModal}\n        driversList={driversList}\n        addTask={addTask}\n        addAndDeleteTask={addAndDeleteTask}\n      />\n    </div>\n  );\n}\n","export default function () {\n  return \"_\" + Math.random().toString(36).substr(2, 9);\n}\n","export const initialDrivers = [\n  { id: 1, name: \"Darius the Great\", selected: true, colour: \"#B8EBD0\" },\n  { id: 2, name: \"Ivan the Terrible\", selected: true, colour: \"#084887\" },\n  { id: 3, name: \"Richard the Lionheart\", selected: true, colour: \"#909CC2\" },\n];\nexport const initialYearTasks = new Map([\n  [\n    \"abcdef\",\n    {\n      id: \"abcdef\",\n      name: \"task1\",\n      description: \"very cool\",\n      type: \"pickup\",\n      time: { start: 100, end: 103 },\n      driver: { id: 1, name: \"bob\" },\n      location: { start: \"a\", finish: \"b\" },\n    },\n  ],\n  [\n    \"abdef\",\n    {\n      id: \"abdef\",\n      name: \"new\",\n      description: \"very cool\",\n      type: \"pickup\",\n      time: { start: 103, end: 104 },\n      driver: { id: 1, name: \"bob\" },\n      location: { start: \"a\", finish: \"b\" },\n    },\n  ],\n  [\n    \"fedcba\",\n    {\n      id: \"fedcba\",\n      name: \"task2\",\n      description: \"super cool\",\n      type: \"dropoff\",\n      time: { start: 200, end: 202 },\n      driver: { id: 2, name: \"joe\" },\n      location: { start: \"c\", finish: \"d\" },\n    },\n  ],\n]);\n","import { useState } from \"react\";\nimport uniqueId from \"../../utils/uniqueId\";\nimport { initialDrivers, initialYearTasks } from \"../../utils/sampleData\";\n/*\n  I couldn't find a good library that implements time on \n  a 24 h / 7 day / 52 week discrete timescale. Popular libraries \n  like MomentJS are implemented in real world timescales. \n  For simplicity sake, I ended up just writing the way the \n  time works myself.\n */\nexport default function useCalendar() {\n  /* I've elected to use useState instead of useReducer because the various states \n  don't really rely on the value of another state in order to update*/\n  /* Time 0 is set set arbitrarily to some point in the spacetime\n  Each increment of 1 represents the passing of one hour\n  Not sure if this is the best way to keep track of time\n  Can switch to momentJS in the future\n  No use for time state right now since not using real world time\n  */\n  // const [time, setTime] = useState(0);\n  // weeks starts incrementing at 0\n  const [calendarTime, setCalendarTime] = useState(0);\n  // state responsible for controlled input of calendar header weeks\n  const [weekInput, setWeekInput] = useState(calendarTime);\n  // keep track of which drivers fall under the dispatcher each year\n  // and whether they are shown on the calendar\n\n  // driversSelected state keeps track of which driver is selected and shows on calendar\n  const [driversSelected, setDrivers] = useState(initialDrivers);\n  // remove selected property to form driversList\n  // it will used for creating new tasks and keep track of who are all the drivers\n  const driversList = driversSelected.map(({ id, name, colour }) => ({\n    id,\n    name,\n    colour,\n  }));\n  // tasks of the year\n  const [yearlyTasks, setYearlyTasks] = useState(initialYearTasks);\n\n  // function ensures yearlyTasks is always sorted from earliest to latest\n  // ensures finding of conflicted schedules\n  const sortTasks = function (taskMap) {\n    return new Map(\n      [...taskMap.entries()].sort((a, b) => a[1].time.start - b[1].time.start)\n    );\n  };\n\n  const checkTimeConflict = function (newTask, yearlyTasks) {\n    const conflictedTasks = [];\n    for (const [, existingTask] of yearlyTasks) {\n      // if different drivers, pass\n\n      if (existingTask.driver.id !== newTask.driver.id) {\n        continue;\n      }\n      // if same task, pass\n      // this occurs when editing task\n      else if (existingTask.id === newTask.id) {\n        continue;\n      }\n      // check if existing task start time between new task start/end\n      if (\n        existingTask.time.start >= newTask.time.start &&\n        existingTask.time.start < newTask.time.end\n      ) {\n        conflictedTasks.push(existingTask);\n      }\n      // check if existing task end time between new task start/end\n      else if (\n        existingTask.time.end > newTask.time.start &&\n        existingTask.time.end <= newTask.time.end\n      ) {\n        conflictedTasks.push(existingTask);\n      }\n      // should leave loop when existing tasks happen after new task\n      else if (existingTask.time.start >= newTask.time.end) {\n        break;\n      }\n    }\n    return conflictedTasks;\n  };\n  // maybe refactoring this to promise based would be more readable\n  const addTask = function (task) {\n    const conflictedTasks = checkTimeConflict(task, yearlyTasks);\n    if (!conflictedTasks.length) {\n      setYearlyTasks((prev) => {\n        const newTasksMap = new Map(prev);\n        // if id exists, the task is edited by reusing id\n        const id = task.id ? task.id : uniqueId();\n        newTasksMap.set(id, { ...task, id });\n        return sortTasks(newTasksMap);\n      });\n    } else {\n      return conflictedTasks;\n    }\n  };\n\n  const deleteTask = function (taskId) {\n    setYearlyTasks((prev) => {\n      const newTasksMap = new Map(prev);\n      newTasksMap.delete(taskId);\n      return newTasksMap;\n    });\n  };\n  /* this function is needed because when resolving conflicted tasks,\n  overriding a conflicted task means at least one task is deleted and one \n  added at the same time. By calling addTask after deleteTask, we cannot \n  ensure that the conflicted task is deleted before addTask modifies the \n  task state, therefore causing checkTimeConflict, which is called by \n  addTask, to stop any updates to the task state */\n  const addAndDeleteTask = function (taskToBeAdded, ...taskToBeDeleted) {\n    let conflictedTasks = [];\n    setYearlyTasks((prev) => {\n      const newTasksMap = new Map(prev);\n      taskToBeDeleted.forEach((taskId) => {\n        newTasksMap.delete(taskId);\n      });\n      const id = taskToBeAdded.id ? taskToBeAdded.id : uniqueId();\n      conflictedTasks = checkTimeConflict(taskToBeAdded, newTasksMap);\n      // handles edge case where adjusted position after resolving conflict also causes conflict\n      if (!conflictedTasks.length) {\n        newTasksMap.set(id, { ...taskToBeAdded, id });\n        return sortTasks(newTasksMap);\n      } else {\n        // if new conflict found, return old state\n        return new Map(prev);\n      }\n    });\n    return conflictedTasks;\n  };\n\n  const toggleDriverSelected = function (driverId) {\n    setDrivers((prev) => {\n      // find index of toggled driver in state array\n      const toggledDriverIndex = prev\n        .map((driver) => driver.id)\n        .indexOf(driverId);\n      // // construct new state array where selected bool is toggled\n      return prev.map((driver, i) => {\n        if (i === toggledDriverIndex) {\n          return { ...driver, selected: !driver.selected };\n        }\n        return driver;\n      });\n    });\n  };\n  const timeRatio = {\n    hour: 1,\n    day: 24,\n    week: 168,\n    year: 8736,\n  };\n\n  const convertTime = function (time, from, to) {\n    return time * (timeRatio[from] / timeRatio[to]);\n  };\n  // number of week into the year\n  const week = convertTime(calendarTime % timeRatio.year, \"hour\", \"week\");\n\n  const changeWeekBy = (n) => {\n    setCalendarTime((prev) => {\n      const newWeek = prev + n * timeRatio.week;\n      // Don't allow negative weeks\n      return newWeek >= 0 ? newWeek : prev;\n    });\n  };\n  // return which day of the week and what hour in 24hr\n  const findDayAndHourFromTime = function (time) {\n    const day = Math.floor((time % timeRatio.week) / timeRatio.day);\n    const hour = time % timeRatio.day;\n    return { day, hour };\n  };\n\n  // handles controlled input of calendar header\n  const handleOnChange = function (e) {\n    const newValue = e.target.value.trim();\n    // number must be between 0-51 included\n    const re = /^([0-9]|[1-4][0-9]|5[01])$/;\n    setWeekInput((prev) => {\n      if (re.test(newValue) || newValue === \"\") {\n        return newValue;\n      } else {\n        return prev;\n      }\n    });\n  };\n\n  // change week to selected week from week input box\n  const handleWeekJump = function () {\n    const weekDifference = weekInput - week;\n    changeWeekBy(weekDifference);\n  };\n\n  // find the task of the week currently viewed\n  let weeklyTasks = Array.from(yearlyTasks.values()).filter((task) => {\n    return Math.floor(convertTime(task.time.start, \"hour\", \"week\")) === week;\n  });\n\n  //transform data to indicate day and time\n  weeklyTasks = weeklyTasks.map((task) => ({\n    ...task,\n    ...findDayAndHourFromTime(task.time.start),\n    duration: task.time.end - task.time.start,\n  }));\n\n  return {\n    addTask,\n    addAndDeleteTask,\n    deleteTask,\n    changeWeekBy,\n    week,\n    weeklyTasks,\n    weekInput,\n    handleOnChange,\n    handleWeekJump,\n    driversSelected,\n    driversList,\n    toggleDriverSelected,\n    yearlyTasks,\n  };\n}\n","import React from \"react\";\nimport DayColumn from \"./DayColumn/DayColumn\";\nimport TimeColumn from \"./TimeColumn/TimeColumn\";\nimport CalendarMainHeader from \"./CalendarMainHeader/CalendarMainHeader\";\nimport CalendarSidebar from \"./CalendarSidebar/CalendarSidebar\";\nimport useCalendar from \"./useCalendar\";\nimport \"./calendar.scss\";\n\nexport default function () {\n  const {\n    addTask,\n    addAndDeleteTask,\n    deleteTask,\n    changeWeekBy,\n    driversSelected,\n    driversList,\n    week,\n    weeklyTasks,\n    weekInput,\n    handleOnChange,\n    handleWeekJump,\n    toggleDriverSelected,\n    yearlyTasks,\n  } = useCalendar();\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Thu\", \"Fri\", \"Sat\"];\n  //task of each day is passed to each DayColumn\n  const dayColumns = days.map((day, i) => {\n    const dailyTasks = weeklyTasks.filter((task) => task.day === i);\n    return (\n      <DayColumn\n        day={day}\n        dailyTasks={dailyTasks}\n        driversSelected={driversSelected}\n        driversList={driversList}\n        addTask={addTask}\n        deleteTask={deleteTask}\n        addAndDeleteTask={addAndDeleteTask}\n      />\n    );\n  });\n  return (\n    <div className=\"calendar\">\n      <div className=\"calendar-sidebar\">\n        <CalendarSidebar\n          driversSelected={driversSelected}\n          driversList={driversList}\n          toggleDriverSelected={toggleDriverSelected}\n          addTask={addTask}\n          addAndDeleteTask={addAndDeleteTask}\n          yearlyTasks={yearlyTasks}\n        />\n      </div>\n      <div className=\"calendar-main\">\n        <CalendarMainHeader\n          week={week}\n          changeWeekBy={changeWeekBy}\n          weekInput={weekInput}\n          handleOnChange={handleOnChange}\n          handleWeekJump={handleWeekJump}\n        />\n        <div className=\"calendar-main-body\">\n          <TimeColumn />\n          {dayColumns}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Calendar from '../Calendar/Calendar'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calendar/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}