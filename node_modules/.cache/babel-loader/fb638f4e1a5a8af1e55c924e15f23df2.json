{"ast":null,"code":"var _jsxFileName = \"/home/momo/portfolio/roseRocket/client/src/components/Calendar/DayColumn/DayColumn.js\";\nimport React from \"react\";\nimport \"./dayColumn.scss\";\nimport HourBlock from \"./HourBlock/HourBlock\";\nexport default function ({\n  day,\n  dailyTasks,\n  drivers\n}) {\n  const dayBlock = []; // add 24 HourBlocks to each DayColumn\n  // each HourBlock is assigned an hour\n\n  for (let i = 0; i < 24; i++) {\n    const taskInfo = dailyTasks.filter(task => //taskInfo is provided to hourBlock if the hour of the task matches hour of HourBlock\n    // and if the driver is selected\n    task.time.hour === i && drivers.some(driver => driver.selected && driver.id === task.driver.id))[0];\n    const hourBlocks = Array(24).fill( /*#__PURE__*/React.createElement(HourBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 39\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, day), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, hourBlocks));\n}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Calendar/DayColumn/DayColumn.js"],"names":["React","HourBlock","day","dailyTasks","drivers","dayBlock","i","taskInfo","filter","task","time","hour","some","driver","selected","id","hourBlocks","Array","fill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,eAAe,UAAU;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,UAAP;AAAmBC,EAAAA;AAAnB,CAAV,EAAwC;AACrD,QAAMC,QAAQ,GAAG,EAAjB,CADqD,CAErD;AACA;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UAAMC,QAAQ,GAAGJ,UAAU,CAACK,MAAX,CACdC,IAAD,IACE;AACA;AACAA,IAAAA,IAAI,CAACC,IAAL,CAAUC,IAAV,KAAmBL,CAAnB,IACAF,OAAO,CAACQ,IAAR,CACGC,MAAD,IAAYA,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACE,EAAP,KAAcN,IAAI,CAACI,MAAL,CAAYE,EAD3D,CALa,EAQf,CARe,CAAjB;AAUA,UAAMC,UAAU,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,eAAe,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,CAAnB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BhB,GAA7B,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4Bc,UAA5B,CAHF,CADF;AAOD","sourcesContent":["import React from \"react\";\nimport \"./dayColumn.scss\";\nimport HourBlock from \"./HourBlock/HourBlock\";\nexport default function ({ day, dailyTasks, drivers }) {\n  const dayBlock = [];\n  // add 24 HourBlocks to each DayColumn\n  // each HourBlock is assigned an hour\n  for (let i = 0; i < 24; i++) {\n    const taskInfo = dailyTasks.filter(\n      (task) =>\n        //taskInfo is provided to hourBlock if the hour of the task matches hour of HourBlock\n        // and if the driver is selected\n        task.time.hour === i &&\n        drivers.some(\n          (driver) => driver.selected && driver.id === task.driver.id\n        )\n    )[0];\n\n    const hourBlocks = Array(24).fill(<HourBlock />);\n  }\n\n  return (\n    <div className=\"day-column\">\n      <div className=\"day-header\">{day}</div>\n      <div className=\"notch\"></div>\n      <div className=\"day-block\">{hourBlocks}</div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}