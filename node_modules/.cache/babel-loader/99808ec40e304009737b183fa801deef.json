{"ast":null,"code":"export default function findOverlappingTasks(tasks) {\n  const overlappingTasks = [];\n\n  for (const currentTask of tasks) {\n    function overlap(task) {\n      // check if currentTask start time between task start/end\n      if (currentTask.time.start >= task.time.start && currentTask.time.start < task.time.end) {\n        return true;\n      } // check if currentTask end time between task start/end\n      else if (currentTask.time.end > task.time.start && currentTask.time.end <= task.time.end) {\n          return true;\n        } else {\n          return false;\n        }\n    }\n\n    if (tasks.some(overlap)) {\n      overlappingTasks.push(currentTask.id);\n    }\n  }\n\n  return overlappingTasks;\n}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/utils/findOverlappingTasks.js"],"names":["findOverlappingTasks","tasks","overlappingTasks","currentTask","overlap","task","time","start","end","some","push","id"],"mappings":"AAAA,eAAe,SAASA,oBAAT,CAA8BC,KAA9B,EAAqC;AAClD,QAAMC,gBAAgB,GAAG,EAAzB;;AACA,OAAK,MAAMC,WAAX,IAA0BF,KAA1B,EAAiC;AAC/B,aAASG,OAAT,CAAiBC,IAAjB,EAAuB;AACrB;AACA,UACEF,WAAW,CAACG,IAAZ,CAAiBC,KAAjB,IAA0BF,IAAI,CAACC,IAAL,CAAUC,KAApC,IACAJ,WAAW,CAACG,IAAZ,CAAiBC,KAAjB,GAAyBF,IAAI,CAACC,IAAL,CAAUE,GAFrC,EAGE;AACA,eAAO,IAAP;AACD,OALD,CAMA;AANA,WAOK,IACHL,WAAW,CAACG,IAAZ,CAAiBE,GAAjB,GAAuBH,IAAI,CAACC,IAAL,CAAUC,KAAjC,IACAJ,WAAW,CAACG,IAAZ,CAAiBE,GAAjB,IAAwBH,IAAI,CAACC,IAAL,CAAUE,GAF/B,EAGH;AACA,iBAAO,IAAP;AACD,SALI,MAKE;AACL,iBAAO,KAAP;AACD;AACF;;AACD,QAAIP,KAAK,CAACQ,IAAN,CAAWL,OAAX,CAAJ,EAAyB;AACvBF,MAAAA,gBAAgB,CAACQ,IAAjB,CAAsBP,WAAW,CAACQ,EAAlC;AACD;AACF;;AAED,SAAOT,gBAAP;AACD","sourcesContent":["export default function findOverlappingTasks(tasks) {\n  const overlappingTasks = [];\n  for (const currentTask of tasks) {\n    function overlap(task) {\n      // check if currentTask start time between task start/end\n      if (\n        currentTask.time.start >= task.time.start &&\n        currentTask.time.start < task.time.end\n      ) {\n        return true;\n      }\n      // check if currentTask end time between task start/end\n      else if (\n        currentTask.time.end > task.time.start &&\n        currentTask.time.end <= task.time.end\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    if (tasks.some(overlap)) {\n      overlappingTasks.push(currentTask.id);\n    }\n  }\n\n  return overlappingTasks;\n}\n"]},"metadata":{},"sourceType":"module"}