{"ast":null,"code":"import React from\"react\";import useDropdown from\"./UseDropdown\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faChevronUp,faChevronDown,faCheck}from\"@fortawesome/free-solid-svg-icons\";import\"./Dropdown.scss\";export default function Dropdown(_ref){var _ref$title=_ref.title,title=_ref$title===void 0?\"none\":_ref$title,_ref$list=_ref.list,list=_ref$list===void 0?[]:_ref$list,select=_ref.select,selected=_ref.selected;var _useDropdown=useDropdown(),listOpen=_useDropdown.listOpen,toggleList=_useDropdown.toggleList;var ListItem=function ListItem(_ref2){var item=_ref2.item;return/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"dd-list-item\",key:item.id,onClick:function onClick(){select({id:item.id,name:item.name});toggleList();}},\"\".concat(item.name,\" \"),\" \",selected.id===item.id&&/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheck}));};var listItems=list.map(function(item){return/*#__PURE__*/React.createElement(ListItem,{item:item});});// decide what text to show in dd-header\nvar titleText=title;if(selected.id){// if something is selected, use the selected name as title text of dd\ntitleText=list.filter(function(item){return item.id===selected.id;})[0].name;}return/*#__PURE__*/React.createElement(React.Fragment,null,listOpen&&/*#__PURE__*/React.createElement(\"div\",{className:\"dd-backdrop\",onClick:toggleList}),/*#__PURE__*/React.createElement(\"div\",{className:\"dd-wrapper\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"dd-header\",onClick:function onClick(){return toggleList();}},/*#__PURE__*/React.createElement(\"div\",{className:\"dd-header-title\"},titleText),listOpen?/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronUp}):/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronDown})),listOpen&&/*#__PURE__*/React.createElement(\"div\",{role:\"list\",className:\"dd-list\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dd-scroll-list\"},listItems))));}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Dropdown/DropdownSingle.js"],"names":["React","useDropdown","FontAwesomeIcon","faChevronUp","faChevronDown","faCheck","Dropdown","title","list","select","selected","listOpen","toggleList","ListItem","item","id","name","listItems","map","titleText","filter"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OACEC,WADF,CAEEC,aAFF,CAGEC,OAHF,KAIO,mCAJP,CAKA,MAAO,iBAAP,CACA,cAAe,SAASC,CAAAA,QAAT,MAKZ,qBAJDC,KAIC,CAJDA,KAIC,qBAJO,MAIP,2BAHDC,IAGC,CAHDA,IAGC,oBAHM,EAGN,WAFDC,MAEC,MAFDA,MAEC,CADDC,QACC,MADDA,QACC,kBACgCT,WAAW,EAD3C,CACOU,QADP,cACOA,QADP,CACiBC,UADjB,cACiBA,UADjB,CAED,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,WAAGC,CAAAA,IAAH,OAAGA,IAAH,oBACf,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,cAFZ,CAGE,GAAG,CAAEA,IAAI,CAACC,EAHZ,CAIE,OAAO,CAAE,kBAAM,CACbN,MAAM,CAAC,CAAEM,EAAE,CAAED,IAAI,CAACC,EAAX,CAAeC,IAAI,CAAEF,IAAI,CAACE,IAA1B,CAAD,CAAN,CACAJ,UAAU,GACX,CAPH,YASME,IAAI,CAACE,IATX,MASoB,GATpB,CAUGN,QAAQ,CAACK,EAAT,GAAgBD,IAAI,CAACC,EAArB,eAA2B,oBAAC,eAAD,EAAiB,IAAI,CAAEV,OAAvB,EAV9B,CADe,EAAjB,CAcA,GAAMY,CAAAA,SAAS,CAAGT,IAAI,CAACU,GAAL,CAAS,SAACJ,IAAD,qBAAU,oBAAC,QAAD,EAAU,IAAI,CAAEA,IAAhB,EAAV,EAAT,CAAlB,CAEA;AACA,GAAIK,CAAAA,SAAS,CAAGZ,KAAhB,CACA,GAAIG,QAAQ,CAACK,EAAb,CAAiB,CACf;AACAI,SAAS,CAAGX,IAAI,CAACY,MAAL,CAAY,SAACN,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYL,QAAQ,CAACK,EAA/B,EAAZ,EAA+C,CAA/C,EAAkDC,IAA9D,CACD,CACD,mBACE,wCAEGL,QAAQ,eAAI,2BAAK,SAAS,CAAC,aAAf,CAA6B,OAAO,CAAEC,UAAtC,EAFf,cAGE,2BAAK,SAAS,CAAC,YAAf,eACE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,WAFZ,CAGE,OAAO,CAAE,yBAAMA,CAAAA,UAAU,EAAhB,EAHX,eAKE,2BAAK,SAAS,CAAC,iBAAf,EAAkCO,SAAlC,CALF,CAMGR,QAAQ,cACP,oBAAC,eAAD,EAAiB,IAAI,CAAER,WAAvB,EADO,cAGP,oBAAC,eAAD,EAAiB,IAAI,CAAEC,aAAvB,EATJ,CADF,CAcGO,QAAQ,eACP,2BAAK,IAAI,CAAC,MAAV,CAAiB,SAAS,CAAC,SAA3B,eACE,2BAAK,SAAS,CAAC,gBAAf,EAAiCM,SAAjC,CADF,CAfJ,CAHF,CADF,CA0BD","sourcesContent":["import React from \"react\";\nimport useDropdown from \"./UseDropdown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronUp,\n  faChevronDown,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Dropdown.scss\";\nexport default function Dropdown({\n  title = \"none\",\n  list = [],\n  select,\n  selected,\n}) {\n  const { listOpen, toggleList } = useDropdown();\n  const ListItem = ({ item }) => (\n    <button\n      type=\"button\"\n      className=\"dd-list-item\"\n      key={item.id}\n      onClick={() => {\n        select({ id: item.id, name: item.name });\n        toggleList();\n      }}\n    >\n      {`${item.name} `}{\" \"}\n      {selected.id === item.id && <FontAwesomeIcon icon={faCheck} />}\n    </button>\n  );\n  const listItems = list.map((item) => <ListItem item={item} />);\n\n  // decide what text to show in dd-header\n  let titleText = title;\n  if (selected.id) {\n    // if something is selected, use the selected name as title text of dd\n    titleText = list.filter((item) => item.id === selected.id)[0].name;\n  }\n  return (\n    <>\n      {/* when list open, show transparent backdrop under dd that closes dd when clicked on  */}\n      {listOpen && <div className=\"dd-backdrop\" onClick={toggleList}></div>}\n      <div className=\"dd-wrapper\">\n        <button\n          type=\"button\"\n          className=\"dd-header\"\n          onClick={() => toggleList()}\n        >\n          <div className=\"dd-header-title\">{titleText}</div>\n          {listOpen ? (\n            <FontAwesomeIcon icon={faChevronUp} />\n          ) : (\n            <FontAwesomeIcon icon={faChevronDown} />\n          )}\n        </button>\n        {/* show list of items when list open */}\n        {listOpen && (\n          <div role=\"list\" className=\"dd-list\">\n            <div className=\"dd-scroll-list\">{listItems}</div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}