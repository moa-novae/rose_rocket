{"ast":null,"code":"var _jsxFileName = \"/home/momo/portfolio/roseRocket/client/src/components/Calendar/DayColumn/Task/TaskModal/TaskModal.js\";\nimport React, { useState } from \"react\";\nimport Modal from \"../../../../Modal/Modal\";\nimport CreateModal from \"../../../CalendarSidebar/CreateModal/CreateModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkerAlt, faClock, faTruckMoving, faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { convertTime } from \"../../../../../utils/convertTime\";\nimport \"./taskModal.scss\";\nexport default function TaskModal({\n  taskInfo,\n  showModal,\n  setShowModal,\n  drivers,\n  addTask\n}) {\n  const day = taskInfo.time.start % (24 * 7);\n  const week = Math.floor(convertTime(taskInfo.time.start, \"hour\", \"week\"));\n  const startHour = taskInfo.time.start % 24;\n  const endHour = taskInfo.time.end % 24;\n  const initialState = {\n    name: taskInfo.name,\n    taskType: {\n      id: taskInfo.type\n    },\n    driver: {\n      id: taskInfo.driver.id\n    },\n    startDay: Math.floor(convertTime(taskInfo.time.start, \"hour\", \"day\")),\n    startHour: taskInfo.time.start % 24,\n    endHour: taskInfo.time.end % 24\n  };\n  const [mode, setMode] = useState(\"view\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mode === \"view\" && /*#__PURE__*/React.createElement(Modal, {\n    showModal: showModal,\n    setShowModal: setShowModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    onClick: () => {\n      setMode(\"edit\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, taskInfo.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-line no-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, taskInfo.type)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTruckMoving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, taskInfo.driver.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faClock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, `From week ${week} day ${day} hour ${startHour} to ${endHour}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faMapMarkerAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, `From ${taskInfo.location.start} to ${taskInfo.location.finish}`, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-line no-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, taskInfo.detail)))), mode === \"edit\" && /*#__PURE__*/React.createElement(CreateModal, {\n    initialState: initialState,\n    showModal: showModal,\n    setShowModal: setShowModal,\n    addTask: addTask,\n    drivers: drivers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Calendar/DayColumn/Task/TaskModal/TaskModal.js"],"names":["React","useState","Modal","CreateModal","FontAwesomeIcon","faMapMarkerAlt","faClock","faTruckMoving","faEdit","faTrashAlt","convertTime","TaskModal","taskInfo","showModal","setShowModal","drivers","addTask","day","time","start","week","Math","floor","startHour","endHour","end","initialState","name","taskType","id","type","driver","startDay","mode","setMode","location","finish","detail"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"../../../../Modal/Modal\";\nimport CreateModal from \"../../../CalendarSidebar/CreateModal/CreateModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMapMarkerAlt,\n  faClock,\n  faTruckMoving,\n  faEdit,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { convertTime } from \"../../../../../utils/convertTime\";\nimport \"./taskModal.scss\";\nexport default function TaskModal({\n  taskInfo,\n  showModal,\n  setShowModal,\n  drivers,\n  addTask,\n}) {\n  const day = taskInfo.time.start % (24 * 7);\n  const week = Math.floor(convertTime(taskInfo.time.start, \"hour\", \"week\"));\n  const startHour = taskInfo.time.start % 24;\n  const endHour = taskInfo.time.end % 24;\n  const initialState = {\n    name: taskInfo.name,\n    taskType: { id: taskInfo.type },\n    driver: {id: taskInfo.driver.id},\n    startDay: Math.floor(convertTime(taskInfo.time.start, \"hour\", \"day\")),\n    startHour: taskInfo.time.start % 24,\n    endHour: taskInfo.time.end % 24,\n  };\n  const [mode, setMode] = useState(\"view\");\n  return (\n    <>\n      {mode === \"view\" && (\n        <Modal showModal={showModal} setShowModal={setShowModal}>\n          <div className=\"task-wrapper\">\n            <div className=\"action-wrapper\">\n              <FontAwesomeIcon\n                icon={faEdit}\n                onClick={() => {\n                  setMode(\"edit\");\n                }}\n              />\n              <FontAwesomeIcon icon={faTrashAlt} />\n            </div>\n            <div className=\"task-name\">{taskInfo.name}</div>\n            <div className=\"task-line no-icon\">\n              <div>{taskInfo.type}</div>\n            </div>\n            <div className=\"task-line\">\n              <FontAwesomeIcon icon={faTruckMoving} />\n\n              <div>{taskInfo.driver.name}</div>\n            </div>\n\n            <div className=\"task-line\">\n              <FontAwesomeIcon icon={faClock} />\n\n              <div>\n                {`From week ${week} day ${day} hour ${startHour} to ${endHour}`}\n              </div>\n            </div>\n\n            <div className=\"task-line\">\n              <FontAwesomeIcon icon={faMapMarkerAlt} />\n\n              <div>\n                {`From ${taskInfo.location.start} to ${taskInfo.location.finish}`}{\" \"}\n              </div>\n            </div>\n            <div className=\"task-line no-icon\">\n              <div>{taskInfo.detail}</div>\n            </div>\n          </div>\n        </Modal>\n      )}\n      {mode === \"edit\" && (\n        <CreateModal\n          initialState={initialState}\n          showModal={showModal}\n          setShowModal={setShowModal}\n          addTask={addTask}\n          drivers={drivers}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}