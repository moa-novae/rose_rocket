{"ast":null,"code":"import _slicedToArray from\"/home/momo/portfolio/roseRocket/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{bgBrightness}from\"../../../../utils/bgBrightness\";import TaskModal from\"./TaskModal/TaskModal\";import\"./task.scss\";export default function Task(props){var addTask=props.addTask,taskInfo=props.taskInfo,driversList=props.driversList,deleteTask=props.deleteTask,addAndDeleteTask=props.addAndDeleteTask,overlap=props.overlap;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShowModal=_useState2[1];// lane is used for horizontal offsets when more than one task share an hour block\nvar lane=0;var driverIndex=driversList.map(function(driver){return driver.id;}).indexOf(taskInfo.driver.id);if(overlap){lane=driverIndex+1;}// each driver has own bg colour for task\nvar taskBgColour=driversList[driverIndex].colour;// choose font colour dynamically depending on bg\nvar taskFontColour=bgBrightness(taskBgColour)===\"bright\"?\"#3c4043\":\"#fafafa\";console.log(taskFontColour);return/*#__PURE__*/React.createElement(React.Fragment,null,taskInfo&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TaskModal,{showModal:showModal,setShowModal:setShowModal,taskInfo:taskInfo,addTask:addTask,deleteTask:deleteTask,addAndDeleteTask:addAndDeleteTask,driversList:driversList}),/*#__PURE__*/React.createElement(\"div\",{className:\"task\"// -0.1 and +0.05 allows sliver of space between connective tasks\n,style:{height:\"\".concat(3*taskInfo.duration-0.1,\"em\"),top:\"\".concat(3*taskInfo.hour+0.05,\"em\"),width:\"\".concat(100-lane*10,\"%\"),backgroundColor:taskBgColour,color:taskFontColour},onClick:function onClick(){setShowModal(true);}},/*#__PURE__*/React.createElement(\"div\",{className:\"task-name\"},taskInfo.name,/*#__PURE__*/React.createElement(\"div\",{className:\"task-description\"},taskInfo.description)))));}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Calendar/DayColumn/Task/Task.js"],"names":["React","useState","bgBrightness","TaskModal","Task","props","addTask","taskInfo","driversList","deleteTask","addAndDeleteTask","overlap","showModal","setShowModal","lane","driverIndex","map","driver","id","indexOf","taskBgColour","colour","taskFontColour","console","log","height","duration","top","hour","width","backgroundColor","color","name","description"],"mappings":"yHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,YAAT,KAA6B,gCAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAO,aAAP,CAEA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,IAEhCC,CAAAA,OAFgC,CAQ9BD,KAR8B,CAEhCC,OAFgC,CAGhCC,QAHgC,CAQ9BF,KAR8B,CAGhCE,QAHgC,CAIhCC,WAJgC,CAQ9BH,KAR8B,CAIhCG,WAJgC,CAKhCC,UALgC,CAQ9BJ,KAR8B,CAKhCI,UALgC,CAMhCC,gBANgC,CAQ9BL,KAR8B,CAMhCK,gBANgC,CAOhCC,OAPgC,CAQ9BN,KAR8B,CAOhCM,OAPgC,eASAV,QAAQ,CAAC,KAAD,CATR,wCAS3BW,SAT2B,eAShBC,YATgB,eAUlC;AACA,GAAIC,CAAAA,IAAI,CAAG,CAAX,CACA,GAAMC,CAAAA,WAAW,CAAGP,WAAW,CAC5BQ,GADiB,CACb,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,EAAnB,EADa,EAEjBC,OAFiB,CAETZ,QAAQ,CAACU,MAAT,CAAgBC,EAFP,CAApB,CAGA,GAAIP,OAAJ,CAAa,CACXG,IAAI,CAAGC,WAAW,CAAG,CAArB,CACD,CACD;AACA,GAAMK,CAAAA,YAAY,CAAGZ,WAAW,CAACO,WAAD,CAAX,CAAyBM,MAA9C,CACA;AACA,GAAMC,CAAAA,cAAc,CAClBpB,YAAY,CAACkB,YAAD,CAAZ,GAA+B,QAA/B,CAA0C,SAA1C,CAAsD,SADxD,CAEAG,OAAO,CAACC,GAAR,CAAYF,cAAZ,EACA,mBACE,wCACGf,QAAQ,eACP,qDAEE,oBAAC,SAAD,EACE,SAAS,CAAEK,SADb,CAEE,YAAY,CAAEC,YAFhB,CAGE,QAAQ,CAAEN,QAHZ,CAIE,OAAO,CAAED,OAJX,CAKE,UAAU,CAAEG,UALd,CAME,gBAAgB,CAAEC,gBANpB,CAOE,WAAW,CAAEF,WAPf,EAFF,cAYE,2BACE,SAAS,CAAC,MACV;AAFF,CAGE,KAAK,CAAE,CACLiB,MAAM,WAAK,EAAIlB,QAAQ,CAACmB,QAAb,CAAwB,GAA7B,MADD,CAELC,GAAG,WAAK,EAAIpB,QAAQ,CAACqB,IAAb,CAAoB,IAAzB,MAFE,CAGLC,KAAK,WAAK,IAAMf,IAAI,CAAG,EAAlB,KAHA,CAILgB,eAAe,CAAEV,YAJZ,CAKLW,KAAK,CAAET,cALF,CAHT,CAUE,OAAO,CAAE,kBAAM,CACbT,YAAY,CAAC,IAAD,CAAZ,CACD,CAZH,eAcE,2BAAK,SAAS,CAAC,WAAf,EACGN,QAAQ,CAACyB,IADZ,cAEE,2BAAK,SAAS,CAAC,kBAAf,EAAmCzB,QAAQ,CAAC0B,WAA5C,CAFF,CAdF,CAZF,CAFJ,CADF,CAsCD","sourcesContent":["import React, { useState } from \"react\";\nimport { bgBrightness } from \"../../../../utils/bgBrightness\";\nimport TaskModal from \"./TaskModal/TaskModal\";\nimport \"./task.scss\";\n\nexport default function Task(props) {\n  const {\n    addTask,\n    taskInfo,\n    driversList,\n    deleteTask,\n    addAndDeleteTask,\n    overlap,\n  } = props;\n  const [showModal, setShowModal] = useState(false);\n  // lane is used for horizontal offsets when more than one task share an hour block\n  let lane = 0;\n  const driverIndex = driversList\n    .map((driver) => driver.id)\n    .indexOf(taskInfo.driver.id);\n  if (overlap) {\n    lane = driverIndex + 1;\n  }\n  // each driver has own bg colour for task\n  const taskBgColour = driversList[driverIndex].colour;\n  // choose font colour dynamically depending on bg\n  const taskFontColour =\n    bgBrightness(taskBgColour) === \"bright\" ? \"#3c4043\" : \"#fafafa\";\n  console.log(taskFontColour);\n  return (\n    <>\n      {taskInfo && (\n        <>\n          {/* show modal of task detail if user click on task */}\n          <TaskModal\n            showModal={showModal}\n            setShowModal={setShowModal}\n            taskInfo={taskInfo}\n            addTask={addTask}\n            deleteTask={deleteTask}\n            addAndDeleteTask={addAndDeleteTask}\n            driversList={driversList}\n          />\n\n          <div\n            className=\"task\"\n            // -0.1 and +0.05 allows sliver of space between connective tasks\n            style={{\n              height: `${3 * taskInfo.duration - 0.1}em`,\n              top: `${3 * taskInfo.hour + 0.05}em`,\n              width: `${100 - lane * 10}%`,\n              backgroundColor: taskBgColour,\n              color: taskFontColour,\n            }}\n            onClick={() => {\n              setShowModal(true);\n            }}\n          >\n            <div className=\"task-name\">\n              {taskInfo.name}\n              <div className=\"task-description\">{taskInfo.description}</div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}