{"ast":null,"code":"var _jsxFileName = \"/home/momo/portfolio/roseRocket/client/src/components/Dropdown/DropdownSingle.js\";\nimport React from \"react\";\nimport useDropdown from \"./UseDropdown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp, faChevronDown, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Dropdown.scss\";\nexport default function Dropdown({\n  title = \"none\",\n  list = [],\n  select,\n  selected\n}) {\n  const {\n    listOpen,\n    toggleList\n  } = useDropdown();\n\n  const ListItem = ({\n    item\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"dd-list-item\",\n    key: item.id,\n    onClick: () => {\n      select({\n        id: item.id,\n        name: item.name\n      });\n      toggleList();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, `${item.name} `, \" \", selected.id === item.id && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 35\n    }\n  }));\n\n  const listItems = list.map(item => /*#__PURE__*/React.createElement(ListItem, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 40\n    }\n  })); // decide what text to show in dd-header\n\n  let titleText = title;\n\n  if (selected.id) {\n    titleText = selected.name;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, listOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-backdrop\",\n    onClick: toggleList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"dd-header\",\n    onClick: () => toggleList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-header-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, titleText), listOpen ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), listOpen && /*#__PURE__*/React.createElement(\"div\", {\n    role: \"list\",\n    className: \"dd-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-scroll-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, listItems))));\n}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Dropdown/DropdownSingle.js"],"names":["React","useDropdown","FontAwesomeIcon","faChevronUp","faChevronDown","faCheck","Dropdown","title","list","select","selected","listOpen","toggleList","ListItem","item","id","name","listItems","map","titleText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,QAIO,mCAJP;AAKA,OAAO,iBAAP;AACA,eAAe,SAASC,QAAT,CAAkB;AAC/BC,EAAAA,KAAK,GAAG,MADuB;AAE/BC,EAAAA,IAAI,GAAG,EAFwB;AAG/BC,EAAAA,MAH+B;AAI/BC,EAAAA;AAJ+B,CAAlB,EAKZ;AACD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BX,WAAW,EAA5C;;AACA,QAAMY,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACf;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,GAAG,EAAEA,IAAI,CAACC,EAHZ;AAIE,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,MAAM,CAAC;AAAEM,QAAAA,EAAE,EAAED,IAAI,CAACC,EAAX;AAAeC,QAAAA,IAAI,EAAEF,IAAI,CAACE;AAA1B,OAAD,CAAN;AACAJ,MAAAA,UAAU;AACX,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,GAAEE,IAAI,CAACE,IAAK,GAThB,EASoB,GATpB,EAUGN,QAAQ,CAACK,EAAT,KAAgBD,IAAI,CAACC,EAArB,iBAA2B,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEV,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAV9B,CADF;;AAcA,QAAMY,SAAS,GAAGT,IAAI,CAACU,GAAL,CAAUJ,IAAD,iBAAU,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,CAAlB,CAhBC,CAkBD;;AACA,MAAIK,SAAS,GAAGZ,KAAhB;;AACA,MAAIG,QAAQ,CAACK,EAAb,EAAiB;AACfI,IAAAA,SAAS,GAAGT,QAAQ,CAACM,IAArB;AACD;;AACD,sBACE,0CAEGL,QAAQ,iBAAI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAEC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFf,eAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,OAAO,EAAE,MAAMA,UAAU,EAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCO,SAAlC,CALF,EAMGR,QAAQ,gBACP,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAER,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAGP,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADF,EAcGO,QAAQ,iBACP;AAAK,IAAA,IAAI,EAAC,MAAV;AAAiB,IAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCM,SAAjC,CADF,CAfJ,CAHF,CADF;AA0BD","sourcesContent":["import React from \"react\";\nimport useDropdown from \"./UseDropdown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronUp,\n  faChevronDown,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Dropdown.scss\";\nexport default function Dropdown({\n  title = \"none\",\n  list = [],\n  select,\n  selected,\n}) {\n  const { listOpen, toggleList } = useDropdown();\n  const ListItem = ({ item }) => (\n    <button\n      type=\"button\"\n      className=\"dd-list-item\"\n      key={item.id}\n      onClick={() => {\n        select({ id: item.id, name: item.name });\n        toggleList();\n      }}\n    >\n      {`${item.name} `}{\" \"}\n      {selected.id === item.id && <FontAwesomeIcon icon={faCheck} />}\n    </button>\n  );\n  const listItems = list.map((item) => <ListItem item={item} />);\n\n  // decide what text to show in dd-header\n  let titleText = title;\n  if (selected.id) {\n    titleText = selected.name;\n  }\n  return (\n    <>\n      {/* when list open, show transparent backdrop under dd that closes dd when clicked on  */}\n      {listOpen && <div className=\"dd-backdrop\" onClick={toggleList}></div>}\n      <div className=\"dd-wrapper\">\n        <button\n          type=\"button\"\n          className=\"dd-header\"\n          onClick={() => toggleList()}\n        >\n          <div className=\"dd-header-title\">{titleText}</div>\n          {listOpen ? (\n            <FontAwesomeIcon icon={faChevronUp} />\n          ) : (\n            <FontAwesomeIcon icon={faChevronDown} />\n          )}\n        </button>\n        {/* show list of items when list open */}\n        {listOpen && (\n          <div role=\"list\" className=\"dd-list\">\n            <div className=\"dd-scroll-list\">{listItems}</div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}