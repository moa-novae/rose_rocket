{"ast":null,"code":"var _jsxFileName = \"/home/momo/portfolio/roseRocket/client/src/components/Dropdown/Dropdown.js\";\nimport React from \"react\";\nimport useDropdown from \"./UseDropdown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp, faChevronDown, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Dropdown.scss\";\nexport default function Dropdown({\n  title = \"placeholder\",\n  list = [],\n  toggle,\n  single,\n  select\n}) {\n  const {\n    listOpen,\n    toggleList\n  } = useDropdown();\n\n  const ListItem = ({\n    item\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"dd-list-item\",\n    key: item.id,\n    onClick: () => {\n      if (single) {\n        select(item.id);\n      } else {\n        toggle(item.id);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, `${item.name} `, \" \", item.selected && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 43\n    }\n  }));\n\n  const listItems = list.map(item => /*#__PURE__*/React.createElement(ListItem, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 40\n    }\n  }));\n  const selectedItemsCount = list.reduce((accu, item) => item.selected ? accu + 1 : accu, 0); // decide what text to show in dd-header\n\n  let titleText = title;\n\n  if (selectedItemsCount === 1) {\n    titleText = list.filter(item => item.selected)[0].name;\n  } else if (selectedItemsCount > 1) {\n    titleText = \"Multiple Selected\";\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, listOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-backdrop\",\n    onClick: toggleList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"dd-header\",\n    onClick: () => toggleList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-header-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, titleText), listOpen ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), listOpen && /*#__PURE__*/React.createElement(\"div\", {\n    role: \"list\",\n    className: \"dd-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dd-scroll-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, listItems))));\n}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Dropdown/Dropdown.js"],"names":["React","useDropdown","FontAwesomeIcon","faChevronUp","faChevronDown","faCheck","Dropdown","title","list","toggle","single","select","listOpen","toggleList","ListItem","item","id","name","selected","listItems","map","selectedItemsCount","reduce","accu","titleText","filter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,QAIO,mCAJP;AAKA,OAAO,iBAAP;AACA,eAAe,SAASC,QAAT,CAAkB;AAC/BC,EAAAA,KAAK,GAAG,aADuB;AAE/BC,EAAAA,IAAI,GAAG,EAFwB;AAG/BC,EAAAA,MAH+B;AAI/BC,EAAAA,MAJ+B;AAK/BC,EAAAA;AAL+B,CAAlB,EAMZ;AACD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BZ,WAAW,EAA5C;;AACA,QAAMa,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACf;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,GAAG,EAAEA,IAAI,CAACC,EAHZ;AAIE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIN,MAAJ,EAAY;AACVC,QAAAA,MAAM,CAACI,IAAI,CAACC,EAAN,CAAN;AACD,OAFD,MAEO;AACLP,QAAAA,MAAM,CAACM,IAAI,CAACC,EAAN,CAAN;AACD;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYI,GAAED,IAAI,CAACE,IAAK,GAZhB,OAYqBF,IAAI,CAACG,QAAL,iBAAiB,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEb,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZtC,CADF;;AAgBA,QAAMc,SAAS,GAAGX,IAAI,CAACY,GAAL,CAAUL,IAAD,iBAAU,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,CAAlB;AACA,QAAMM,kBAAkB,GAAGb,IAAI,CAACc,MAAL,CACzB,CAACC,IAAD,EAAOR,IAAP,KAAiBA,IAAI,CAACG,QAAL,GAAgBK,IAAI,GAAG,CAAvB,GAA2BA,IADnB,EAEzB,CAFyB,CAA3B,CAnBC,CAuBD;;AACA,MAAIC,SAAS,GAAGjB,KAAhB;;AACA,MAAIc,kBAAkB,KAAK,CAA3B,EAA8B;AAC5BG,IAAAA,SAAS,GAAGhB,IAAI,CAACiB,MAAL,CAAaV,IAAD,IAAUA,IAAI,CAACG,QAA3B,EAAqC,CAArC,EAAwCD,IAApD;AACD,GAFD,MAEO,IAAII,kBAAkB,GAAG,CAAzB,EAA4B;AACjCG,IAAAA,SAAS,GAAG,mBAAZ;AACD;;AACD,sBACE,0CAEGZ,QAAQ,iBAAI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAEC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFf,eAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,OAAO,EAAE,MAAMA,UAAU,EAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCW,SAAlC,CALF,EAMGZ,QAAQ,gBACP,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAET,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAGP,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADF,EAcGQ,QAAQ,iBACP;AAAK,IAAA,IAAI,EAAC,MAAV;AAAiB,IAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCO,SAAjC,CADF,CAfJ,CAHF,CADF;AA0BD","sourcesContent":["import React from \"react\";\nimport useDropdown from \"./UseDropdown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronUp,\n  faChevronDown,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Dropdown.scss\";\nexport default function Dropdown({\n  title = \"placeholder\",\n  list = [],\n  toggle,\n  single,\n  select,\n}) {\n  const { listOpen, toggleList } = useDropdown();\n  const ListItem = ({ item }) => (\n    <button\n      type=\"button\"\n      className=\"dd-list-item\"\n      key={item.id}\n      onClick={() => {\n        if (single) {\n          select(item.id);\n        } else {\n          toggle(item.id);\n        }\n      }}\n    >\n      {`${item.name} `} {item.selected && <FontAwesomeIcon icon={faCheck} />}\n    </button>\n  );\n  const listItems = list.map((item) => <ListItem item={item} />);\n  const selectedItemsCount = list.reduce(\n    (accu, item) => (item.selected ? accu + 1 : accu),\n    0\n  );\n  // decide what text to show in dd-header\n  let titleText = title;\n  if (selectedItemsCount === 1) {\n    titleText = list.filter((item) => item.selected)[0].name;\n  } else if (selectedItemsCount > 1) {\n    titleText = \"Multiple Selected\";\n  }\n  return (\n    <>\n      {/* when list open, show transparent backdrop under dd that closes dd when clicked on  */}\n      {listOpen && <div className=\"dd-backdrop\" onClick={toggleList}></div>}\n      <div className=\"dd-wrapper\">\n        <button\n          type=\"button\"\n          className=\"dd-header\"\n          onClick={() => toggleList()}\n        >\n          <div className=\"dd-header-title\">{titleText}</div>\n          {listOpen ? (\n            <FontAwesomeIcon icon={faChevronUp} />\n          ) : (\n            <FontAwesomeIcon icon={faChevronDown} />\n          )}\n        </button>\n\n        {listOpen && (\n          <div role=\"list\" className=\"dd-list\">\n            <div className=\"dd-scroll-list\">{listItems}</div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}