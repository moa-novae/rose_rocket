{"ast":null,"code":"var _jsxFileName = \"/home/momo/portfolio/roseRocket/client/src/components/Calendar/DayColumn/Task/TaskModal/TaskModal.js\";\nimport React, { useState } from \"react\";\nimport Modal from \"../../../../Modal/Modal\";\nimport CreateModal from \"../../../CalendarSidebar/CreateModal/CreateModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkerAlt, faClock, faTruckMoving, faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { convertTime } from \"../../../../../utils/convertTime\";\nimport \"./taskModal.scss\";\nexport default function TaskModal({\n  taskInfo,\n  showModal,\n  setShowModal,\n  driversList,\n  addTask,\n  deleteTask,\n  addAndDeleteTask\n}) {\n  // transform time into human readable day and hour\n  const day = taskInfo.time.start % (24 * 7);\n  const week = Math.floor(convertTime(taskInfo.time.start, \"hour\", \"week\"));\n  const startHour = taskInfo.time.start % 24;\n  const endHour = taskInfo.time.end % 24; // massage taskInfo prop into the correct form state shape and pass as initial state\n\n  const initialState = {\n    name: taskInfo.name,\n    taskType: {\n      id: taskInfo.type\n    },\n    driver: {\n      id: taskInfo.driver.id\n    },\n    startDay: Math.floor(convertTime(taskInfo.time.start, \"hour\", \"day\")),\n    startHour: taskInfo.time.start % 24,\n    endHour: taskInfo.time.end % 24,\n    startLocation: taskInfo.location.start,\n    endLocation: taskInfo.location.finish,\n    description: taskInfo.description\n  };\n  const [mode, setMode] = useState(\"view\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mode === \"view\" && /*#__PURE__*/React.createElement(Modal, {\n    showModal: showModal,\n    setShowModal: setShowModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    onClick: () => {\n      setMode(\"edit\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    onClick: () => deleteTask(taskInfo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, taskInfo.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-line no-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, taskInfo.type)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTruckMoving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, taskInfo.driver.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faClock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, `From week ${week} day ${day} hour ${startHour} to ${endHour}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faMapMarkerAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, `From ${taskInfo.location.start} to ${taskInfo.location.finish}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-line no-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, taskInfo.description)))), mode === \"edit\" && /*#__PURE__*/React.createElement(CreateModal, {\n    initialState: initialState,\n    showModal: showModal,\n    setShowModal: setShowModal,\n    addTask: addTask,\n    deleteTask: deleteTask,\n    addAndDeleteTask: addAndDeleteTask,\n    driversList: driversList,\n    handleOnClose: () => setMode(\"view\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Calendar/DayColumn/Task/TaskModal/TaskModal.js"],"names":["React","useState","Modal","CreateModal","FontAwesomeIcon","faMapMarkerAlt","faClock","faTruckMoving","faEdit","faTrashAlt","convertTime","TaskModal","taskInfo","showModal","setShowModal","driversList","addTask","deleteTask","addAndDeleteTask","day","time","start","week","Math","floor","startHour","endHour","end","initialState","name","taskType","id","type","driver","startDay","startLocation","location","endLocation","finish","description","mode","setMode"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"../../../../Modal/Modal\";\nimport CreateModal from \"../../../CalendarSidebar/CreateModal/CreateModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMapMarkerAlt,\n  faClock,\n  faTruckMoving,\n  faEdit,\n  faTrashAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { convertTime } from \"../../../../../utils/convertTime\";\nimport \"./taskModal.scss\";\nexport default function TaskModal({\n  taskInfo,\n  showModal,\n  setShowModal,\n  driversList,\n  addTask,\n  deleteTask,\n  addAndDeleteTask,\n}) {\n  // transform time into human readable day and hour\n  const day = taskInfo.time.start % (24 * 7);\n  const week = Math.floor(convertTime(taskInfo.time.start, \"hour\", \"week\"));\n  const startHour = taskInfo.time.start % 24;\n  const endHour = taskInfo.time.end % 24;\n  // massage taskInfo prop into the correct form state shape and pass as initial state\n  const initialState = {\n    name: taskInfo.name,\n    taskType: { id: taskInfo.type },\n    driver: { id: taskInfo.driver.id },\n    startDay: Math.floor(convertTime(taskInfo.time.start, \"hour\", \"day\")),\n    startHour: taskInfo.time.start % 24,\n    endHour: taskInfo.time.end % 24,\n    startLocation: taskInfo.location.start,\n    endLocation: taskInfo.location.finish,\n    description: taskInfo.description,\n  };\n  const [mode, setMode] = useState(\"view\");\n  return (\n    <>\n      {mode === \"view\" && (\n        <Modal showModal={showModal} setShowModal={setShowModal}>\n          <div className=\"task-wrapper\">\n            <div className=\"action-wrapper\">\n              <FontAwesomeIcon\n                icon={faEdit}\n                onClick={() => {\n                  setMode(\"edit\");\n                }}\n              />\n              <FontAwesomeIcon\n                icon={faTrashAlt}\n                onClick={() => deleteTask(taskInfo.id)}\n              />\n            </div>\n            <div className=\"task-name\">{taskInfo.name}</div>\n            <div className=\"task-line no-icon\">\n              <div>{taskInfo.type}</div>\n            </div>\n            <div className=\"task-line\">\n              <FontAwesomeIcon icon={faTruckMoving} />\n\n              <div>{taskInfo.driver.name}</div>\n            </div>\n\n            <div className=\"task-line\">\n              <FontAwesomeIcon icon={faClock} />\n\n              <div>\n                {`From week ${week} day ${day} hour ${startHour} to ${endHour}`}\n              </div>\n            </div>\n\n            <div className=\"task-line\">\n              <FontAwesomeIcon icon={faMapMarkerAlt} />\n\n              <div>\n                {`From ${taskInfo.location.start} to ${taskInfo.location.finish}`}\n              </div>\n            </div>\n            <div className=\"task-line no-icon\">\n              <div>{taskInfo.description}</div>\n            </div>\n          </div>\n        </Modal>\n      )}\n      {mode === \"edit\" && (\n        <CreateModal\n          initialState={initialState}\n          showModal={showModal}\n          setShowModal={setShowModal}\n          addTask={addTask}\n          deleteTask={deleteTask}\n          addAndDeleteTask={addAndDeleteTask}\n          driversList={driversList}\n          handleOnClose={() => setMode(\"view\")}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}