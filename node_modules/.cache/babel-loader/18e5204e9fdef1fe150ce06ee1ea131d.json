{"ast":null,"code":"import { useState } from \"react\";\nexport default function useCalendar() {\n  /* Time 0 is set set arbitrarily to some point in the spacetime\n  Each increment of 1 represents the passing of one hour\n  Not sure if this is the best way to keep track of time\n  Can switch to momentJS in the future\n  */\n  const [time, setTime] = useState(0);\n  const [calendarTime, setCalendarTime] = useState(0);\n  const timeRatio = {\n    hour: 1,\n    day: 24,\n    week: 168,\n    year: 8736\n  };\n  console.log('useCalendar');\n\n  const setCalendarView = function (week) {\n    setCalendarTime(convertTime(week, \"week\", \"hour\"));\n  };\n\n  const convertTime = function (time, from, to) {\n    return time * (timeRatio[from] / timeRatio[to]);\n  }; // number of week into the year\n\n\n  const week = convertTime(time % timeRatio.year, \"hour\", \"week\");\n\n  const increaseWeek = () => {\n    console.log('increase');\n  };\n\n  return {\n    increaseWeek,\n    week\n  };\n}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Calendar/useCalendar.js"],"names":["useState","useCalendar","time","setTime","calendarTime","setCalendarTime","timeRatio","hour","day","week","year","console","log","setCalendarView","convertTime","from","to","increaseWeek"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC;;;;;AAKA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,CAAD,CAAhD;AAEA,QAAMM,SAAS,GAAG;AAChBC,IAAAA,IAAI,EAAE,CADU;AAEhBC,IAAAA,GAAG,EAAE,EAFW;AAGhBC,IAAAA,IAAI,EAAE,GAHU;AAIhBC,IAAAA,IAAI,EAAE;AAJU,GAAlB;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,QAAMC,eAAe,GAAG,UAAUJ,IAAV,EAAgB;AACtCJ,IAAAA,eAAe,CAACS,WAAW,CAACL,IAAD,EAAO,MAAP,EAAe,MAAf,CAAZ,CAAf;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAG,UAAUZ,IAAV,EAAgBa,IAAhB,EAAsBC,EAAtB,EAA0B;AAC5C,WAAOd,IAAI,IAAII,SAAS,CAACS,IAAD,CAAT,GAAkBT,SAAS,CAACU,EAAD,CAA/B,CAAX;AACD,GAFD,CApBoC,CAuBpC;;;AACA,QAAMP,IAAI,GAAGK,WAAW,CAACZ,IAAI,GAAGI,SAAS,CAACI,IAAlB,EAAwB,MAAxB,EAAgC,MAAhC,CAAxB;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACzBN,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAFD;;AAGA,SAAO;AACLK,IAAAA,YADK;AAELR,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { useState } from \"react\";\n\nexport default function useCalendar() {\n  /* Time 0 is set set arbitrarily to some point in the spacetime\n  Each increment of 1 represents the passing of one hour\n  Not sure if this is the best way to keep track of time\n  Can switch to momentJS in the future\n  */\n  const [time, setTime] = useState(0);\n  const [calendarTime, setCalendarTime] = useState(0);\n\n  const timeRatio = {\n    hour: 1,\n    day: 24,\n    week: 168,\n    year: 8736,\n  };\n  console.log('useCalendar')\n  const setCalendarView = function (week) {\n    setCalendarTime(convertTime(week, \"week\", \"hour\"));\n  };\n\n  const convertTime = function (time, from, to) {\n    return time * (timeRatio[from] / timeRatio[to]);\n  };\n  // number of week into the year\n  const week = convertTime(time % timeRatio.year, \"hour\", \"week\");\n  \n  const increaseWeek = () => {\n    console.log('increase')\n  }\n  return {\n    increaseWeek,\n    week,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}