{"ast":null,"code":"import { useState } from \"react\";\nexport default function useCreateModal(initialState) {\n  const [form, setForm] = useState(initialState);\n  console.log(\"form\", form);\n\n  function validateOnChange(name, newValue, oldValue) {\n    switch (name) {\n      case \"startDay\":\n      case \"endDay\":\n        if (newValue >= 0 && newValue <= 364) {\n          return newValue;\n        }\n\n        return oldValue;\n\n      case \"startHour\":\n      case \"endHour\":\n        if (newValue >= 0 && newValue < 24) {\n          return newValue;\n        }\n\n        return oldValue;\n\n      default:\n        return newValue;\n    }\n  }\n\n  function handleOnChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => ({ ...prev,\n      [name]: validateOnChange(name, value, prev[name])\n    }));\n  }\n\n  function handleDriverChange(driver) {\n    setForm(prev => ({ ...prev,\n      driver\n    }));\n  }\n\n  function handleTaskTypeChange(taskType) {\n    setForm(prev => ({ ...prev,\n      taskType\n    }));\n  }\n\n  return {\n    form,\n    handleOnChange,\n    handleDriverChange,\n    handleTaskTypeChange\n  };\n}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Calendar/CalendarSidebar/CreateModal/useCreateModal.js"],"names":["useState","useCreateModal","initialState","form","setForm","console","log","validateOnChange","name","newValue","oldValue","handleOnChange","e","value","target","prev","handleDriverChange","driver","handleTaskTypeChange","taskType"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACE,YAAD,CAAhC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;;AACA,WAASI,gBAAT,CAA0BC,IAA1B,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;AAClD,YAAQF,IAAR;AACE,WAAK,UAAL;AACA,WAAK,QAAL;AACE,YAAIC,QAAQ,IAAI,CAAZ,IAAiBA,QAAQ,IAAI,GAAjC,EAAsC;AACpC,iBAAOA,QAAP;AACD;;AACD,eAAOC,QAAP;;AACF,WAAK,WAAL;AACA,WAAK,SAAL;AACE,YAAID,QAAQ,IAAI,CAAZ,IAAiBA,QAAQ,GAAG,EAAhC,EAAoC;AAClC,iBAAOA,QAAP;AACD;;AACD,eAAOC,QAAP;;AACF;AACE,eAAOD,QAAP;AAdJ;AAgBD;;AACD,WAASE,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,UAAM;AAAEJ,MAAAA,IAAF;AAAQK,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAV,IAAAA,OAAO,CAAEW,IAAD,KAAW,EACjB,GAAGA,IADc;AAEjB,OAACP,IAAD,GAAQD,gBAAgB,CAACC,IAAD,EAAOK,KAAP,EAAcE,IAAI,CAACP,IAAD,CAAlB;AAFP,KAAX,CAAD,CAAP;AAID;;AACD,WAASQ,kBAAT,CAA4BC,MAA5B,EAAoC;AAClCb,IAAAA,OAAO,CAAEW,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWE,MAAAA;AAAX,KAAX,CAAD,CAAP;AACD;;AACD,WAASC,oBAAT,CAA8BC,QAA9B,EAAwC;AACtCf,IAAAA,OAAO,CAAEW,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWI,MAAAA;AAAX,KAAX,CAAD,CAAP;AACD;;AACD,SAAO;AAAEhB,IAAAA,IAAF;AAAQQ,IAAAA,cAAR;AAAwBK,IAAAA,kBAAxB;AAA4CE,IAAAA;AAA5C,GAAP;AACD","sourcesContent":["import { useState } from \"react\";\n\nexport default function useCreateModal(initialState) {\n  const [form, setForm] = useState(initialState);\n  console.log(\"form\", form);\n  function validateOnChange(name, newValue, oldValue) {\n    switch (name) {\n      case \"startDay\":\n      case \"endDay\":\n        if (newValue >= 0 && newValue <= 364) {\n          return newValue;\n        }\n        return oldValue;\n      case \"startHour\":\n      case \"endHour\":\n        if (newValue >= 0 && newValue < 24) {\n          return newValue;\n        }\n        return oldValue;\n      default:\n        return newValue;\n    }\n  }\n  function handleOnChange(e) {\n    const { name, value } = e.target;\n    setForm((prev) => ({\n      ...prev,\n      [name]: validateOnChange(name, value, prev[name]),\n    }));\n  }\n  function handleDriverChange(driver) {\n    setForm((prev) => ({ ...prev, driver }));\n  }\n  function handleTaskTypeChange(taskType) {\n    setForm((prev) => ({ ...prev, taskType }));\n  }\n  return { form, handleOnChange, handleDriverChange, handleTaskTypeChange };\n}\n"]},"metadata":{},"sourceType":"module"}