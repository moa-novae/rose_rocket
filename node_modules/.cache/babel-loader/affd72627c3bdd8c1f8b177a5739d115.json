{"ast":null,"code":"import React from\"react\";import\"./dayColumn.scss\";import HourBlock from\"./HourBlock/HourBlock\";import Task from\"./Task/Task\";import findOverlappingTasks from\"../../../utils/findOverlappingTasks\";export default function(_ref){var day=_ref.day,dailyTasks=_ref.dailyTasks,drivers=_ref.drivers,driversList=_ref.driversList,addTask=_ref.addTask,deleteTask=_ref.deleteTask,addAndDeleteTask=_ref.addAndDeleteTask;// add 24 HourBlocks to each DayColumn\n// each HourBlock is assigned an hour\nvar hourBlocks=Array(24).fill(/*#__PURE__*/React.createElement(HourBlock,null));// the filter allows tasks that have drivers selected to show up\nvar visibleTasks=dailyTasks.filter(function(task){return drivers.some(function(driver){return driver.selected&&driver.id===task.driver.id;});});// not if this is more efficient for finding overlapping tasks or dom ref is better\nvar overlappingTaskIds=findOverlappingTasks(visibleTasks);var tasks=visibleTasks.map(function(task){return/*#__PURE__*/React.createElement(Task,{key:task.id,taskInfo:task,driversList:driversList,addTask:addTask,deleteTask:deleteTask,addAndDeleteTask:addAndDeleteTask,overlap:overlappingTaskIds.includes(task.id)});});return/*#__PURE__*/React.createElement(\"div\",{className:\"day-column\"},/*#__PURE__*/React.createElement(\"div\",{className:\"day-header\"},day),/*#__PURE__*/React.createElement(\"div\",{className:\"notch\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"day-block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"hour-blocks\"},hourBlocks),/*#__PURE__*/React.createElement(\"div\",{className:\"task-block\"},tasks)));}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Calendar/DayColumn/DayColumn.js"],"names":["React","HourBlock","Task","findOverlappingTasks","day","dailyTasks","drivers","driversList","addTask","deleteTask","addAndDeleteTask","hourBlocks","Array","fill","visibleTasks","filter","task","some","driver","selected","id","overlappingTaskIds","tasks","map","includes"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,qCAAjC,CACA,cAAe,eAQZ,IAPDC,CAAAA,GAOC,MAPDA,GAOC,CANDC,UAMC,MANDA,UAMC,CALDC,OAKC,MALDA,OAKC,CAJDC,WAIC,MAJDA,WAIC,CAHDC,OAGC,MAHDA,OAGC,CAFDC,UAEC,MAFDA,UAEC,CADDC,gBACC,MADDA,gBACC,CACD;AACA;AACA,GAAMC,CAAAA,UAAU,CAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,cAAe,oBAAC,SAAD,MAAf,CAAnB,CAEA;AACA,GAAMC,CAAAA,YAAY,CAAGT,UAAU,CAACU,MAAX,CAAkB,SAACC,IAAD,QACrCV,CAAAA,OAAO,CAACW,IAAR,CAAa,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,QAAP,EAAmBD,MAAM,CAACE,EAAP,GAAcJ,IAAI,CAACE,MAAL,CAAYE,EAAzD,EAAb,CADqC,EAAlB,CAArB,CAGA;AACA,GAAMC,CAAAA,kBAAkB,CAAGlB,oBAAoB,CAACW,YAAD,CAA/C,CAEA,GAAMQ,CAAAA,KAAK,CAAGR,YAAY,CAACS,GAAb,CAAiB,SAACP,IAAD,qBAC7B,oBAAC,IAAD,EACE,GAAG,CAAEA,IAAI,CAACI,EADZ,CAEE,QAAQ,CAAEJ,IAFZ,CAGE,WAAW,CAAET,WAHf,CAIE,OAAO,CAAEC,OAJX,CAKE,UAAU,CAAEC,UALd,CAME,gBAAgB,CAAEC,gBANpB,CAOE,OAAO,CAAEW,kBAAkB,CAACG,QAAnB,CAA4BR,IAAI,CAACI,EAAjC,CAPX,EAD6B,EAAjB,CAAd,CAYA,mBACE,2BAAK,SAAS,CAAC,YAAf,eACE,2BAAK,SAAS,CAAC,YAAf,EAA6BhB,GAA7B,CADF,cAEE,2BAAK,SAAS,CAAC,OAAf,EAFF,cAGE,2BAAK,SAAS,CAAC,WAAf,eACE,2BAAK,SAAS,CAAC,aAAf,EAA8BO,UAA9B,CADF,cAEE,2BAAK,SAAS,CAAC,YAAf,EAA6BW,KAA7B,CAFF,CAHF,CADF,CAUD","sourcesContent":["import React from \"react\";\nimport \"./dayColumn.scss\";\nimport HourBlock from \"./HourBlock/HourBlock\";\nimport Task from \"./Task/Task\";\nimport findOverlappingTasks from \"../../../utils/findOverlappingTasks\";\nexport default function ({\n  day,\n  dailyTasks,\n  drivers,\n  driversList,\n  addTask,\n  deleteTask,\n  addAndDeleteTask,\n}) {\n  // add 24 HourBlocks to each DayColumn\n  // each HourBlock is assigned an hour\n  const hourBlocks = Array(24).fill(<HourBlock />);\n\n  // the filter allows tasks that have drivers selected to show up\n  const visibleTasks = dailyTasks.filter((task) =>\n    drivers.some((driver) => driver.selected && driver.id === task.driver.id)\n  );\n  // not if this is more efficient for finding overlapping tasks or dom ref is better\n  const overlappingTaskIds = findOverlappingTasks(visibleTasks);\n\n  const tasks = visibleTasks.map((task) => (\n    <Task\n      key={task.id}\n      taskInfo={task}\n      driversList={driversList}\n      addTask={addTask}\n      deleteTask={deleteTask}\n      addAndDeleteTask={addAndDeleteTask}\n      overlap={overlappingTaskIds.includes(task.id)}\n    />\n  ));\n\n  return (\n    <div className=\"day-column\">\n      <div className=\"day-header\">{day}</div>\n      <div className=\"notch\"></div>\n      <div className=\"day-block\">\n        <div className=\"hour-blocks\">{hourBlocks}</div>\n        <div className=\"task-block\">{tasks}</div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}