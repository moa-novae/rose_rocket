{"ast":null,"code":"import { useState } from \"react\";\nexport default function useCreateModal(initialState) {\n  const [form, setForm] = useState(initialState);\n\n  function handleOnChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => ({ ...prev,\n      [name]: value\n    }));\n  }\n\n  function handleDriverChange(driver) {\n    setForm(prev => ({ ...prev,\n      driver\n    }));\n  }\n\n  function handleTaskTypeChange(taskType) {\n    setForm(prev => ({ ...prev,\n      taskType\n    }));\n  }\n\n  return {\n    form,\n    handleOnChange,\n    handleDriverChange,\n    handleTaskTypeChange\n  };\n}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/components/Calendar/CalendarSidebar/CreateModal/useCreateModal.js"],"names":["useState","useCreateModal","initialState","form","setForm","handleOnChange","e","name","value","target","prev","handleDriverChange","driver","handleTaskTypeChange","taskType"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACE,YAAD,CAAhC;;AACA,WAASG,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAL,IAAAA,OAAO,CAAEM,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAACH,IAAD,GAAQC;AAAnB,KAAX,CAAD,CAAP;AACD;;AACD,WAASG,kBAAT,CAA4BC,MAA5B,EAAoC;AAClCR,IAAAA,OAAO,CAAEM,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWE,MAAAA;AAAX,KAAX,CAAD,CAAP;AACD;;AACD,WAASC,oBAAT,CAA8BC,QAA9B,EAAwC;AACtCV,IAAAA,OAAO,CAAEM,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAWI,MAAAA;AAAX,KAAX,CAAD,CAAP;AACD;;AACD,SAAO;AAAEX,IAAAA,IAAF;AAAQE,IAAAA,cAAR;AAAwBM,IAAAA,kBAAxB;AAA4CE,IAAAA;AAA5C,GAAP;AACD","sourcesContent":["import { useState } from \"react\";\n\nexport default function useCreateModal(initialState) {\n  const [form, setForm] = useState(initialState);\n  function handleOnChange(e) {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  }\n  function handleDriverChange(driver) {\n    setForm((prev) => ({ ...prev, driver }));\n  }\n  function handleTaskTypeChange(taskType) {\n    setForm((prev) => ({ ...prev, taskType }));\n  }\n  return { form, handleOnChange, handleDriverChange, handleTaskTypeChange };\n}\n"]},"metadata":{},"sourceType":"module"}