{"ast":null,"code":"export default function findOverlappingTasks(tasks) {\n  const overlappingTasks = [];\n\n  for (const currentTask of tasks) {\n    function overlap(task) {\n      // check if currentTask start time between task start/end\n      if (currentTask.id === task.id) {\n        return false;\n      } else if (currentTask.time.start >= task.time.start && currentTask.time.start < task.time.end) {\n        return true;\n      } // check if currentTask end time between task start/end\n      else if (currentTask.time.end > task.time.start && currentTask.time.end <= task.time.end) {\n          return true;\n        } else {\n          return false;\n        }\n    }\n\n    if (tasks.some(overlap)) {\n      overlappingTasks.push(currentTask.id);\n    }\n  }\n\n  return overlappingTasks;\n}","map":{"version":3,"sources":["/home/momo/portfolio/roseRocket/client/src/utils/findOverlappingTasks.js"],"names":["findOverlappingTasks","tasks","overlappingTasks","currentTask","overlap","task","id","time","start","end","some","push"],"mappings":"AAAA,eAAe,SAASA,oBAAT,CAA8BC,KAA9B,EAAqC;AAClD,QAAMC,gBAAgB,GAAG,EAAzB;;AACA,OAAK,MAAMC,WAAX,IAA0BF,KAA1B,EAAiC;AAC/B,aAASG,OAAT,CAAiBC,IAAjB,EAAuB;AACrB;AACA,UAAIF,WAAW,CAACG,EAAZ,KAAmBD,IAAI,CAACC,EAA5B,EAAgC;AAC9B,eAAO,KAAP;AACD,OAFD,MAGK,IACHH,WAAW,CAACI,IAAZ,CAAiBC,KAAjB,IAA0BH,IAAI,CAACE,IAAL,CAAUC,KAApC,IACAL,WAAW,CAACI,IAAZ,CAAiBC,KAAjB,GAAyBH,IAAI,CAACE,IAAL,CAAUE,GAFhC,EAGH;AACA,eAAO,IAAP;AACD,OALI,CAML;AANK,WAOA,IACHN,WAAW,CAACI,IAAZ,CAAiBE,GAAjB,GAAuBJ,IAAI,CAACE,IAAL,CAAUC,KAAjC,IACAL,WAAW,CAACI,IAAZ,CAAiBE,GAAjB,IAAwBJ,IAAI,CAACE,IAAL,CAAUE,GAF/B,EAGH;AACA,iBAAO,IAAP;AACD,SALI,MAKE;AACL,iBAAO,KAAP;AACD;AACF;;AACD,QAAIR,KAAK,CAACS,IAAN,CAAWN,OAAX,CAAJ,EAAyB;AACvBF,MAAAA,gBAAgB,CAACS,IAAjB,CAAsBR,WAAW,CAACG,EAAlC;AACD;AACF;;AAED,SAAOJ,gBAAP;AACD","sourcesContent":["export default function findOverlappingTasks(tasks) {\n  const overlappingTasks = [];\n  for (const currentTask of tasks) {\n    function overlap(task) {\n      // check if currentTask start time between task start/end\n      if (currentTask.id === task.id) {\n        return false\n      }\n      else if (\n        currentTask.time.start >= task.time.start &&\n        currentTask.time.start < task.time.end\n      ) {\n        return true;\n      }\n      // check if currentTask end time between task start/end\n      else if (\n        currentTask.time.end > task.time.start &&\n        currentTask.time.end <= task.time.end\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    if (tasks.some(overlap)) {\n      overlappingTasks.push(currentTask.id);\n    }\n  }\n\n  return overlappingTasks;\n}\n"]},"metadata":{},"sourceType":"module"}